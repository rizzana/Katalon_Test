<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id_0" class="- topic/topic concept/concept "><title class="- topic/title ">[WebUI] Modify Object Property</title><conbody class="- topic/body  concept/conbody "><section id="id_1" class="- topic/section ">
    <title class="- topic/title ">Description  </title>
    
      <p class="- topic/p ">Modify existing property or add a new property to test object.
         Use when test object has attributes changing in runtime. This
         keyword does not modify the object saved in Object Repository,
         instead, it creates another test object, modifies and returns this
         test object. Hence, users must use a variable to store the returned
         object.</p>
    
  </section><section id="id_2" class="- topic/section ">
    <title class="- topic/title ">Parameters  </title>
    
      <table class="- topic/table "><tgroup cols="4" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Param</entry><entry class="- topic/entry ">Param Type</entry><entry class="- topic/entry ">Mandatory</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">testObject</entry><entry class="- topic/entry ">Test Object</entry><entry class="- topic/entry ">Required</entry><entry class="- topic/entry ">Represent a web element.</entry></row><row class="- topic/row "><entry class="- topic/entry ">propertyName</entry><entry class="- topic/entry ">String</entry><entry class="- topic/entry ">Required</entry><entry class="- topic/entry ">Name of the property, for example, xpath, id, name,... If the
                  property already exists in the object, the keyword will modify its
                  related artifacts; if not, the keyword will add a new
                  property.</entry></row><row class="- topic/row "><entry class="- topic/entry ">matchCondition</entry><entry class="- topic/entry ">String</entry><entry class="- topic/entry ">Required</entry><entry class="- topic/entry ">Condition to match property name with property value, for
                  example, equals, not equals,... In case the property already
                  exists, input null to this argument to keep the old value of match
                  condition.</entry></row><row class="- topic/row "><entry class="- topic/entry ">modifyValue</entry><entry class="- topic/entry ">String</entry><entry class="- topic/entry ">Required</entry><entry class="- topic/entry ">Value of the property. In case the property already exists,
                  input null to this argument to keep the old property value.</entry></row><row class="- topic/row "><entry class="- topic/entry ">isActive</entry><entry class="- topic/entry ">Boolean</entry><entry class="- topic/entry ">Required</entry><entry class="- topic/entry ">True if the property is checked (used to find the test object);
                  otherwise, false. In case the property already exists, input null
                  to this argument to keep the old value.</entry></row><row class="- topic/row "><entry class="- topic/entry ">flowControl</entry><entry class="- topic/entry ">FailureHandling</entry><entry class="- topic/entry ">Optional</entry><entry class="- topic/entry ">Specify <xref href="../../../../../Maintain/failure-handling/failure-handling.dita" class="- topic/xref ">failure handling</xref> schema to
                  determine whether the execution should be allowed to continue or
                  stop.</entry></row></tbody></tgroup></table>
    
  </section><section id="id_3" class="- topic/section ">
    <title class="- topic/title ">Returns</title>
    
      <table class="- topic/table "><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Param Type</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">TestObject</entry><entry class="- topic/entry ">The newly created TestObject.</entry></row></tbody></tgroup></table>
    
  </section><section id="id_4" class="- topic/section ">
    <title class="- topic/title ">Example </title>
    
      <p class="- topic/p ">You want to modify property "xpath" of the object "btn_Login"
         and saved the modified object as "new_btn".</p>
      
        <codeblock class="+ topic/pre pr-d/codeblock ">import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.checkpoint.CheckpointFactory as CheckpointFactory
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as MobileBuiltInKeywords
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testcase.TestCaseFactory as TestCaseFactory
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testdata.TestDataFactory as TestDataFactory
import com.kms.katalon.core.testobject.ObjectRepository as ObjectRepository
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WSBuiltInKeywords
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUiBuiltInKeywords
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import internal.GlobalVariable as GlobalVariable

'Open browser and navigate to AUT'
WebUI.openBrowser(GlobalVariable.G_SiteURL)

'Input username'
WebUI.setText(findTestObject('Page_Login/txt_UserName'), Username)

'Input password'
WebUI.setText(findTestObject('Page_Login/txt_Password'), Password)
 
'Modify xpath of \'Login\' button'
new_btn = WebUI.modifyObjectProperty(findTestObject('Page_Login/btn_Login'), 'xpath', 'equals', '//*[@type=\"button\"]', false)

'Click on new_btn'
WebUI.click(new_btn)

'Close browser'
WebUI.closeBrowser()
</codeblock>
      
    
  </section></conbody></concept>