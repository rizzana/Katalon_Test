<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id_2" class="- topic/topic concept/concept "><title class="- topic/title ">Scenario: Login with valid credentials</title><conbody class="- topic/body  concept/conbody "><ol class="- topic/ol "><li class="- topic/li ">Launch the application under test with this sample URL: <ph class="- topic/ph ">http://demoaut.katalon.com/</ph></li><li class="- topic/li ">Use <uicontrol class="+ topic/ph ui-d/uicontrol ">Wait For Page Load</uicontrol> keyword</li><li class="- topic/li ">Use <uicontrol class="+ topic/ph ui-d/uicontrol ">Wait For Element Visible</uicontrol> keyword for Make Appointment button</li><li class="- topic/li ">Click on Make Appointment</li><li class="- topic/li ">Use <uicontrol class="+ topic/ph ui-d/uicontrol ">Wait For Element Visible</uicontrol> for Login button</li><li class="- topic/li ">Enter a valid username and password, then click on the Login button</li></ol><p class="- topic/p ">At runtime recording, we can add synchronization commands to wait for page load, wait for element present, wait for element visible, etc. </p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 1:</b> Launch Katalon Studio and click on the <uicontrol class="+ topic/ph ui-d/uicontrol ">Create New Test Case</uicontrol> button from the main toolbar. Provide a name for your test case and click <uicontrol class="+ topic/ph ui-d/uicontrol ">OK</uicontrol>. An empty test case is created.</p><p class="- topic/p "><image width="500" href="image/ks-create-a-new-test-case.png" class="- topic/image "><alt class="- topic/alt ">create a new test case</alt></image></p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 2:</b> Click on <uicontrol class="+ topic/ph ui-d/uicontrol ">Record Web</uicontrol> from the main toolbar.</p><p class="- topic/p "><image width="350" href="image/ks-840-record-web.png" class="- topic/image "><alt class="- topic/alt ">record web</alt></image></p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 3:</b> The <uicontrol class="+ topic/ph ui-d/uicontrol ">Record</uicontrol> dialog displays, where recorded actions show.</p><p class="- topic/p "> Provide the URL of the application under test.</p><p class="- topic/p "><image width="700" href="../create_test_case_using_record_playback/image/ks-855-recorder-dialog.png" class="- topic/image "><alt class="- topic/alt ">record web</alt></image></p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 4:</b> Select a browser and click on the <uicontrol class="+ topic/ph ui-d/uicontrol ">Record</uicontrol> button to start recording the test case</p><p class="- topic/p "><image width="600" href="../create_test_case_using_record_playback/image/ks-855-select-browser.png" class="- topic/image "><alt class="- topic/alt ">select browser</alt></image></p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 5:</b> Once your application is launched, move the cursor to <uicontrol class="+ topic/ph ui-d/uicontrol ">Make Appointment</uicontrol> and click on the button. You need to wait for the login page to load.</p><p class="- topic/p "><image width="700" href="../create_test_case_using_record_playback/image/ks-make-appointment.png" class="- topic/image "><alt class="- topic/alt ">make appointment</alt></image></p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 6:</b> You can add synchronization commands in runtime recording in the <uicontrol class="+ topic/ph ui-d/uicontrol ">Recorded Actions</uicontrol> pane. Select a step at which the synchronization commands will be added. Click on <uicontrol class="+ topic/ph ui-d/uicontrol ">Add</uicontrol>.</p><p class="- topic/p "><image width="700" href="image/ks-855-add-kw.png" class="- topic/image "><alt class="- topic/alt ">add</alt></image></p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 7:</b> Double-click on the newly added keyword and type <uicontrol class="+ topic/ph ui-d/uicontrol ">Wait For Page Load</uicontrol> keyword. Then, double click on the <uicontrol class="+ topic/ph ui-d/uicontrol ">Input</uicontrol> cell and set the value to 45 seconds.</p><p class="- topic/p "><image width="700" href="image/ks-855-wait-for-page-load-kw.png" class="- topic/image "><alt class="- topic/alt ">add input</alt></image></p><p class="- topic/p "> Now Katalon Studio will wait 45 seconds for the page to get fully loaded to execute the next command. These synchronization commands avoid execution failures.</p><p class="- topic/p "><image width="700" href="image/ks-855-wait-kw.png" class="- topic/image "><alt class="- topic/alt ">wait for page load</alt></image></p><p class="- topic/p ">You can pause and resume the recording whenever you need it. Let us continue with recording a few more actions. Switch to the browser in which you are recording, move to <uicontrol class="+ topic/ph ui-d/uicontrol ">Make Appointment</uicontrol> button and click on <uicontrol class="+ topic/ph ui-d/uicontrol ">Make Appointment</uicontrol> button.</p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 8:</b> Now to wait for a specific element to be loaded and to perform an action, we need to add the <uicontrol class="+ topic/ph ui-d/uicontrol ">Wait for Element Present</uicontrol> command before clicking on the <uicontrol class="+ topic/ph ui-d/uicontrol ">Make Appointment</uicontrol> button.</p><p class="- topic/p ">To do so, right click on the element, then choose <uicontrol class="+ topic/ph ui-d/uicontrol ">Katalon Studio</uicontrol> &gt; <uicontrol class="+ topic/ph ui-d/uicontrol ">Wait For Element Present</uicontrol>.</p><p class="- topic/p "><image width="700" href="image/ks-wait-for-element-present.png" class="- topic/image "><alt class="- topic/alt ">add wait keyword</alt></image></p><p class="- topic/p ">So here, we have added two wait commands, one is to wait till the page gets loaded and other is to wait till the element gets displayed<b class="+ topic/ph hi-d/b ">.</b> The reason behind adding these keywords is that, even though the page has been loaded, sometimes elements will not be present in the DOM (referring to Ajax-based applications mainly).</p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 9:</b> We need to provide the expected time as an input for all the wait commands. Tap on the <uicontrol class="+ topic/ph ui-d/uicontrol ">Wait For Element Present</uicontrol> step and provide 15 seconds as the expected time interval.</p><p class="- topic/p "><image width="600" href="image/ks-wait-15.png" class="- topic/image "><alt class="- topic/alt ">add wait for element present</alt></image></p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Step 10:</b> You can also add the <uicontrol class="+ topic/ph ui-d/uicontrol ">Wait For Element Visible</uicontrol> command on the <uicontrol class="+ topic/ph ui-d/uicontrol ">Login</uicontrol> button. Once you are done, click on <uicontrol class="+ topic/ph ui-d/uicontrol ">Stop</uicontrol> and save the recorded actions into Katalon Studio. You are prompted to save captured objects into the <uicontrol class="+ topic/ph ui-d/uicontrol ">Object Repository</uicontrol>, which can be reused whenever needed<b class="+ topic/ph hi-d/b ">.</b> You can also create a folder to maintain page objects in desired structure.</p><p class="- topic/p ">Your recorded test script should be as shown below.</p><p class="- topic/p "><image width="600" href="image/ks-recorded-test-case.png" class="- topic/image "><alt class="- topic/alt ">test case</alt></image></p><p class="- topic/p ">Click on <uicontrol class="+ topic/ph ui-d/uicontrol ">Script</uicontrol> tab to view the generated code. You can also modify the script from the script mode. All the recorded actions can be modified in script mode.</p><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Script code:</b></p><codeblock class="+ topic/pre pr-d/codeblock ">WebUI.openBrowser('')
 
WebUI.navigateToUrl('http://demoaut.katalon.com/')
 
WebUI.waitForPageLoad(45)
 
WebUI.waitForElementPresent(findTestObject('Page_CURA Healthcare Service/a_Make Appointment'), 15)
 
WebUI.click(findTestObject('Page_CURA Healthcare Service/a_Make Appointment'))
 
WebUI.waitForElementVisible(findTestObject('Page_CURA Healthcare Service (1)/button_Login'), 45)
 
WebUI.click(findTestObject('Page_CURA Healthcare Service (1)/button_Login'))
 
WebUI.closeBrowser()

</codeblock><p class="- topic/p ">It is recommended to add synchronization while recording automation test cases in the <xref href="../../../Create_Test_Cases/Generate_Test_Steps_In_Manual_View/Generate_test_steps_in_manual_view.dita" class="- topic/xref ">manual mode</xref> or <xref href="../../../Create_Test_Cases/Generate_Test_Steps_In_Script_View/Generate_Test_Steps_in_Script_view.dita" class="- topic/xref ">script mode</xref>. It is also a good practice to use wait commands to avoid execution failures. Download source code <xref format="html" href="https://github.com/katalon-studio/katalon-web-automation" scope="external" class="- topic/xref ">here</xref>.</p><p class="- topic/p ">For further instructions and help, you can refer to <xref href="../../../Create_Test_Cases/Create_Test_Case_Overview/Create_test_case.dita" class="- topic/xref ">Recording WebUI Test</xref> tutorial.</p></conbody></concept>