<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept-8672" xml:lang="en-us" class="- topic/topic concept/concept "><title class="- topic/title ">Create a Harness Workflow</title><prolog class="- topic/prolog "><author translate="no" type="creator" class="- topic/author ">Hao Le &lt;hao.le@katalon.com&gt;</author><metadata class="- topic/metadata "><keywords class="- topic/keywords "/></metadata></prolog><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">Workflows define the deployment orchestration steps, including how a Service is deployed, verified, rolled back, and more. </p><p class="- topic/p ">Here we create a Workflow that includes steps to build, execute our tests, and finally clean up the deployed workload.</p></conbody><task id="dez0let9tzjwf3o" class="- topic/topic task/task "><title class="- topic/title ">Add a Workflow</title><taskbody class="- topic/body task/taskbody "><context class="- topic/section task/context ">To add a Workflow, follow these steps:</context><steps class="- topic/ol task/steps "><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In your Application, click <uicontrol class="+ topic/ph ui-d/uicontrol ">Workflows</uicontrol> &gt; <uicontrol class="+ topic/ph ui-d/uicontrol ">Add Workflow</uicontrol>.</cmd></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In the opened dialog, specify the properties for your Workflow.</cmd><stepxmp class="- topic/itemgroup task/stepxmp ">
                        <p class="- topic/p ">Here we create a Rolling Deployment with our defined Environment, Service, and Infrastructure.</p>
                        <p class="- topic/p "><image width="500" href="Images/Harness-add-workflow.png" class="- topic/image "><alt class="- topic/alt ">Harness Workflow dialog</alt></image></p>
                    </stepxmp></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Click <uicontrol class="+ topic/ph ui-d/uicontrol ">Submit</uicontrol>.</cmd></step></steps></taskbody></task><task id="yvdkr2x738x91tp" class="- topic/topic task/task "><title class="- topic/title ">Add a Workflow Variable</title><taskbody class="- topic/body task/taskbody "><context class="- topic/section task/context ">
                <p class="- topic/p ">In the sample manifest files, we create a Job named <codeph class="+ topic/ph pr-d/codeph ">test</codeph>, so we need to add a Workflow Variable to help Harness Workflow identify the Job that needs executing.</p><p class="- topic/p "><image width="600" href="Images/harness-manifest-values-file.png" class="- topic/image "><alt class="- topic/alt ">Harness manifest file</alt></image></p>
                <p class="- topic/p ">To add a Workflow Variable, follow these steps:</p>
            </context><steps class="- topic/ol task/steps "><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Open the created Workflow and select <uicontrol class="+ topic/ph ui-d/uicontrol ">Workflow Variables</uicontrol>.</cmd></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In the opened dialog, define a variable with type <codeph class="+ topic/ph pr-d/codeph ">text</codeph> and provide the default value (the Job name).</cmd><info class="- topic/itemgroup task/info ">In our case, the value is <codeph class="+ topic/ph pr-d/codeph ">test</codeph>.</info><stepxmp class="- topic/itemgroup task/stepxmp "><image width="600" href="Images/harness-workflow-variable.png" class="- topic/image "><alt class="- topic/alt ">Harness Workflow Variables dialog</alt></image></stepxmp></step></steps></taskbody><task id="q9xgdu0m3r9nv9k" class="- topic/topic task/task "><title class="- topic/title ">Configure the Workflow</title><taskbody class="- topic/body task/taskbody "><context class="- topic/section task/context ">
                    <p class="- topic/p ">After setting up the Workflow Variable, we configure the Workflow to deploy the test build with the included Kubernetes manifests.</p>
                    <p class="- topic/p ">Follow these steps:</p>
                </context><steps class="- topic/ol task/steps "><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In the <uicontrol class="+ topic/ph ui-d/uicontrol ">Deploy</uicontrol> stage of the Workflow, add an Apply step.</cmd><info class="- topic/itemgroup task/info ">This step applies our Kubernetes manifest file (<codeph class="+ topic/ph pr-d/codeph ">test.yaml</codeph>) to build and execute our tests.</info><stepxmp class="- topic/itemgroup task/stepxmp "><image width="500" href="Images/harness-workflow-add-apply.png" class="- topic/image "><alt class="- topic/alt ">Harness Apply step</alt></image></stepxmp></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In the <uicontrol class="+ topic/ph ui-d/uicontrol ">Wrap Up</uicontrol> stage of the Workflow, add a Delete step.</cmd><info class="- topic/itemgroup task/info ">The Delete step helps clean up the workload deployed by the Deploy stage.</info><stepxmp class="- topic/itemgroup task/stepxmp "><image width="500" href="Images/harness-delete-step.png" class="- topic/image "><alt class="- topic/alt ">Harness Delete step</alt></image></stepxmp></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Add a Rollback step. In the <uicontrol class="+ topic/ph ui-d/uicontrol ">Rollback Steps</uicontrol> / <uicontrol class="+ topic/ph ui-d/uicontrol ">Deploy</uicontrol> stage, add a Delete step as in <uicontrol class="+ topic/ph ui-d/uicontrol ">Wrap Up</uicontrol> stage.</cmd><info class="- topic/itemgroup task/info ">The Rollback steps initiate a rollback of your most-recent successful deployment.</info></step></steps><result class="- topic/section task/result ">
                    <p class="- topic/p ">Your Workflow is now configured with an Apply step, a Delete step, and Rollback steps.</p>
                    <p class="- topic/p "><image width="600" href="Images/harness-workflow-configured.png" class="- topic/image "><alt class="- topic/alt ">Harness Workflow configured</alt></image></p>
                </result></taskbody><task id="zpnh2kihv9rx4xd" class="- topic/topic task/task "><title class="- topic/title ">Deploy the Workflow</title><taskbody class="- topic/body task/taskbody "><context class="- topic/section task/context ">
                        <p class="- topic/p ">After configuring the Workflow, we can deploy it and view the execution results.</p>
                        <p class="- topic/p ">Follow these steps:</p>
                    </context><steps class="- topic/ol task/steps "><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Open the Workflow and click on the <uicontrol class="+ topic/ph ui-d/uicontrol ">Deploy</uicontrol> button.</cmd><stepxmp class="- topic/itemgroup task/stepxmp "><image width="700" href="Images/harness-deploy-button.png-mh.png" class="- topic/image "><alt class="- topic/alt ">Harness Workflow Deploy button</alt></image></stepxmp></step></steps><result class="- topic/section task/result ">
                        <p class="- topic/p ">The Workflow is deployed. You can view the execution process in the <uicontrol class="+ topic/ph ui-d/uicontrol ">Workflow</uicontrol> page.</p>
                        <p class="- topic/p "><image width="700" href="Images/harness-workflows-page.png" class="- topic/image "><alt class="- topic/alt ">Harness Workflow page</alt></image></p>
                        <p class="- topic/p ">You can also view the execution logs in the Docker container built in your Kubernetes cluster.</p>
                        <p class="- topic/p "><image width="700" href="Images/harness-docker-logs.png" class="- topic/image "><alt class="- topic/alt ">Docker logs</alt></image></p>
                        <note class="- topic/note ">
                            <ul class="- topic/ul "><li class="- topic/li ">
                                    <p class="- topic/p ">To view test reports on TestOps, you can enable Katalon TestOps integration in your project. See: <xref href="https://docs.katalon.com/docs/katalon-studio-enterprise/integration/testops-integration/integrate-katalon-testops-with-katalon-studio#enable-katalon-testops-integration" scope="external" class="- topic/xref ">Enable Katalon TestOps Integration</xref>.</p>
                                </li></ul>
                        </note>
                    </result></taskbody></task></task></task></concept>