<?xml version="1.0" encoding="UTF-8"?><?workdir /Users/rizzastaana/Documents/Katalon_Test/temp/webhelp-responsive/Documents/Create_tests/Introduction_To_Test_Creation/AUT/introduction_api_testing?><?workdir-uri file:/Users/rizzastaana/Documents/Katalon_Test/temp/webhelp-responsive/Documents/Create_tests/Introduction_To_Test_Creation/AUT/introduction_api_testing/?><?path2project ../../../../../?><?path2project-uri ../../../../../?><?path2rootmap-uri ../../../../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="id_13" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept) (topic abbrev-d) a(props deliveryTarget) (topic equation-d) (topic hazard-d) (topic hi-d) (topic indexing-d) (topic markup-d) (topic mathml-d) (topic pr-d) (topic relmgmt-d) (topic sw-d) (topic svg-d) (topic ui-d) (topic ut-d) (topic markup-d xml-d)" xtrf="file:/Users/rizzastaana/Documents/Katalon_Test/Documents/Create_tests/Introduction_To_Test_Creation/AUT/introduction_api_testing/fuzz_testing.dita" xtrc="concept:1;3:60" specializations="@props/deliveryTarget"><title class="- topic/title " xtrf="file:/Users/rizzastaana/Documents/Katalon_Test/Documents/Create_tests/Introduction_To_Test_Creation/AUT/introduction_api_testing/fuzz_testing.dita" xtrc="title:1;3:90">Fuzz testing</title><conbody class="- topic/body  concept/conbody " xtrf="file:/Users/rizzastaana/Documents/Katalon_Test/Documents/Create_tests/Introduction_To_Test_Creation/AUT/introduction_api_testing/fuzz_testing.dita" xtrc="conbody:1;3:158"><p class="- topic/p " xtrf="file:/Users/rizzastaana/Documents/Katalon_Test/Documents/Create_tests/Introduction_To_Test_Creation/AUT/introduction_api_testing/fuzz_testing.dita" xtrc="p:1;3:180">Fuzz testing is another step in the whole security audit
         process. In this testing type, a vast amount of random data
         (referred to as "noise" or "fuzz" ), will be input into the system
         with the aim to try a forced crash or any negative behavior. This
         fuzz test will help test the API in term of the limits to prepare
         for the "worst case scenarios."</p></conbody><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " mapkeyref="ditamap-8764" xtrc="topicref:14;17:65" xtrf="file:/Users/rizzastaana/Documents/Katalon_Test/Documents/Create_tests/Introduction_To_Test_Creation/AUT/introduction_api_testing/introduction_api_testing.ditamap"><link class="- topic/link " format="dita" href="../../../../../Documents/Create_tests/Introduction_To_Test_Creation/AUT/introduction_api_testing/api_testing_types.dita" mapclass="- map/topicref " role="parent" scope="local" type="concept" xtrc="topicref:6;9:67" xtrf="file:/Users/rizzastaana/Documents/Katalon_Test/Documents/Create_tests/Introduction_To_Test_Creation/AUT/introduction_api_testing/introduction_api_testing.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>API testing types</linktext></link></linkpool></related-links></concept>