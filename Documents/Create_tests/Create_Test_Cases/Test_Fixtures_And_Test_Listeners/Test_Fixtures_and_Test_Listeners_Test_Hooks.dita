<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept-3322" xml:lang="en-us" class="- topic/topic concept/concept "><title class="- topic/title ">Test Fixtures and Test Listeners (Test Hooks) in <ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/></title><prolog class="- topic/prolog "><author translate="no" type="creator" class="- topic/author ">Yen Nguyen &lt;yen.nguyen@katalon.com&gt;</author><metadata class="- topic/metadata "><keywords class="- topic/keywords "/></metadata></prolog><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">To extend your current testing flow, the test fixtures (@setUp/@tearDown methods) and test listeners might be useful for prerequisite and clean-up configurations for all the tests.</p><p class="- topic/p ">With the prerequisite configuration, the test engine must take specific actions before starting test execution. For clean-up configuration, the test engine must carry out some actions after the test execution finishes.</p><p class="- topic/p ">The infographic below visualizes how <ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/> executes your automated test projects with the test fixtures and test listeners methods.</p><p class="- topic/p "><image href="Images/execution-flow.png" width="500" class="- topic/image "><alt class="- topic/alt ">Execution flow</alt></image></p><p class="- topic/p "><note class="- topic/note "><ul class="- topic/ul "><li class="- topic/li "><p class="- topic/p ">Test listeners are always triggered first if you define both test listeners and activate setUp/tearDown methods simultaneously.</p></li></ul></note></p><p class="- topic/p ">This document guides you through how to configure the setUp/tearDown methods and the test listeners in <ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/>.</p></conbody></concept>