<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id_0" class="- topic/topic concept/concept "><title class="- topic/title ">[WebUI] Wait for jQuery Load</title><conbody class="- topic/body  concept/conbody "><section id="id_1" class="- topic/section ">
    <title class="- topic/title ">Description</title>
    
      <p class="- topic/p ">Wait for jQuery to load within the given time in second
         unit.</p>
    
  </section><section id="id_2" class="- topic/section ">
    <title class="- topic/title ">Parameters</title>
    
      <table class="- topic/table "><tgroup cols="4" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Param</entry><entry class="- topic/entry ">ParamType</entry><entry class="- topic/entry ">Mandatory</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">seconds</entry><entry class="- topic/entry ">int</entry><entry class="- topic/entry ">Required</entry><entry class="- topic/entry ">The number of seconds to wait</entry></row><row class="- topic/row "><entry class="- topic/entry ">flowControl</entry><entry class="- topic/entry ">FailureHandling</entry><entry class="- topic/entry ">Optional</entry><entry class="- topic/entry ">Specify <xref href="../../../../../Maintain/failure-handling/failure-handling.dita" class="- topic/xref ">failure handling</xref> schema to
                  determine whether the execution should be allowed to continue or
                  stop.</entry></row></tbody></tgroup></table>
    
  </section><section id="id_3" class="- topic/section ">
    <title class="- topic/title ">Returns</title>
    
      <p class="- topic/p ">
        <b class="+ topic/ph hi-d/b ">true</b> if jQuery is ready. Otherwise,
         <b class="+ topic/ph hi-d/b ">false</b>.</p>
      <note type="note" class="- topic/note ">
        

        <p class="- topic/p ">Checking of whether jQuery is loaded or used in your current web
            application is based on this <xref format="html" href="http://www.swtestacademy.com/selenium-wait-javascript-angular-ajax/" scope="external" class="- topic/xref ">approach</xref>.</p>
      </note>
    
  </section><section id="id_4" class="- topic/section ">
    <title class="- topic/title ">Example</title>
    
      <p class="- topic/p ">Verify text displayed after waiting for jQuery to load</p>
      
        <codeblock class="+ topic/pre pr-d/codeblock ">import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.checkpoint.CheckpointFactory as CheckpointFactory
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as MobileBuiltInKeywords
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testcase.TestCaseFactory as TestCaseFactory
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testdata.TestDataFactory as TestDataFactory
import com.kms.katalon.core.testobject.ObjectRepository as ObjectRepository
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WSBuiltInKeywords
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUiBuiltInKeywords
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import internal.GlobalVariable as GlobalVariable

'Open browser and navigate to page'
WebUI.openBrowser('http://www.jquery-steps.com/Examples#async')

'Click on Start Example button of Async Content Loading Example'
WebUI.click(findTestObject('Page_jQuery-async'))


'Wait for jQuery to be loaded in 20 seconds timeout.
WebUI.waitForJQueryLoad(20)

'Verify displayed text'
WebUI.verifyTextPresent('To test async loading again press \"Next\" and then go back to the first step.', false)

WebUI.closeBrowser()
</codeblock>
      
    
  </section></conbody></concept>