<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task-308" class="- topic/topic task/task "><title class="- topic/title ">In script view</title><taskbody class="- topic/body task/taskbody "><context class="- topic/section task/context "><p class="- topic/p ">The <uicontrol class="+ topic/ph ui-d/uicontrol ">Script</uicontrol> view of test cases allows you to programmatically define and handle <b class="+ topic/ph hi-d/b ">For</b> or <uicontrol class="+ topic/ph ui-d/uicontrol ">While</uicontrol> structure using Groovy or Java language. For more details about looping structures in Groovy, refer to this Groovy documentation:&#160; <xref format="html" href="http://groovy-lang.org/semantics.html#_looping_structures" scope="external" class="- topic/xref ">Looping Structures</xref> . </p></context><steps class="- topic/ol task/steps "><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">For example:</cmd><info class="- topic/itemgroup task/info "><ul class="- topic/ul "><li class="- topic/li "><p class="- topic/p "><b class="+ topic/ph hi-d/b ">For</b>:</p><p class="- topic/p "><codeblock class="+ topic/pre pr-d/codeblock ">for (def index : (0..5)) { WebUI.acceptAlert(FailureHandling.STOP_ON_FAILURE)</codeblock></p></li></ul><p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li "><p class="- topic/p "><b class="+ topic/ph hi-d/b ">While</b>:</p><p class="- topic/p "><codeblock class="+ topic/pre pr-d/codeblock ">while (varA == true) { WebUI.acceptAlert(FailureHandling.STOP_ON_FAILURE) }
            </codeblock></p></li></ul></p></info></step></steps></taskbody></task>