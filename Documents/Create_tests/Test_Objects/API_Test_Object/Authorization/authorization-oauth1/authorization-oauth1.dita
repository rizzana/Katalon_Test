<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id" class="- topic/topic concept/concept "><title class="- topic/title ">Authorization OAuth 1.0 in <ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/></title><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">To learn more about OAuth 1.0, you can refer to OAuth documentation: <b class="+ topic/ph hi-d/b "><xref format="html" href="https://oauth.net/core/1.0a/" scope="external" class="- topic/xref ">OAuth Core 1.0 Revision A</xref>. </b> </p><p class="- topic/p ">The following fields are supported in <ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/>:</p><table class="- topic/table "><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Name</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Consumer Key</entry><entry class="- topic/entry ">The API key associated with the application (Twitter, Facebook, etc.). This key (or 'client ID', as Facebook calls it) is what identifies the client, which is a website/service that is trying to access an end-user's resources.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Consumer Secret</entry><entry class="- topic/entry ">The client password that is used to authenticate with the authentication server, which is a Twitter/Facebook/etc. server that authenticates the client.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Signature Method</entry><entry class="- topic/entry ">The consumer uses either HMAC-SHA1 or RSA-SHA1 to sign the request. For signature method RSA-SHA1, only OpenSSL RSA Private key with PKCS#8 or PKCS#1 format is supported.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Token</entry><entry class="- topic/entry ">What is issued to the client once the client successfully authenticates itself (using the consumer key &amp; secret). This access token defines the privileges of the client (what data the client can and cannot access).</entry></row><row class="- topic/row "><entry class="- topic/entry ">Token Secret</entry><entry class="- topic/entry ">The string sent with the access token as a password.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Realm</entry><entry class="- topic/entry ">The Provider basically decides if this is of any importance. It is the counterpart of the WWW-authenticate response header. If a server returns a WWW-authenticate header of 'OAuth realm="<xref format="html" href="https://api.example.com/" scope="external" class="- topic/xref ">https://api.example.com</xref>"' then it probably parses that value from the Authenticate request header in the OAuth process.</entry></row></tbody></tgroup></table></conbody></concept>