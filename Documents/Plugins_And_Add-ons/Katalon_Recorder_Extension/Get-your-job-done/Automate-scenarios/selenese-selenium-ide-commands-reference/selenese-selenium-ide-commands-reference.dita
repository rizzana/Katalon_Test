<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id" class="- topic/topic concept/concept "><title class="- topic/title ">Selenese (Selenium IDE) Commands Reference</title><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">Katalon Automation Recorder provides various Selenium Commands (Selenese) to help automate web application testing. These commands stimulate actions on the application under test (AUT) and create automation test scripts.</p><p class="- topic/p ">The below table is the list of all supported Selenese Commands.</p><section class="- topic/section "><title class="- topic/title ">addLocationStrategy</title><p class="- topic/p ">addLocationStrategy(strategyName, functionDefinition)</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments:</b>                            </p><p class="- topic/p ">strategyName - the name of the strategy to define; this should use only letters [a-zA-Z] with no spaces or other punctuation.</p><p class="- topic/p "> functionDefinition - a string defining the body of a function in JavaScript. For example: <codeblock class="+ topic/pre pr-d/codeblock ">return inDocument.getElementById(locator);</codeblock>                            </p><p class="- topic/p "> Defines a new function for Selenium to locate elements on the page. For example, if you define the strategy "foo", and someone runs click("foo=blah"), we'll run your function, passing you the string "blah", and click on the element that your function returns, or throw an "Element not found" error if your function returns null. We'll pass three arguments to your function:</p><p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li ">locator: the string the user passed in</li><li class="- topic/li ">inWindow: the currently selected window</li><li class="- topic/li ">inDocument: the currently selected document</li></ul> The function must return null if the element can't be found.</p>                    </section><section class="- topic/section "><title class="- topic/title ">addLocationStrategyAndWait</title><p class="- topic/p ">addLocationStrategyAndWait(strategyName, functionDefinition)</p><p class="- topic/p "> Generated from addLocationStrategy(strategyName, functionDefinition)</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments:</b>                            </p><p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li ">strategyName - the name of the strategy to define; this should use only letters [a-zA-Z] with no spaces or other punctuation.</li><li class="- topic/li ">functionDefinition - a string defining the body of a function in JavaScript. For example: <codeblock class="+ topic/pre pr-d/codeblock ">return inDocument.getElementById(locator);</codeblock>                                </li></ul> Defines a new function for Selenium to locate elements on the page. For example, if you define the strategy "foo", and someone runs click("foo=blah"), we'll run your function, passing you the string "blah", and click on the element that your function returns, or throw an "Element not found" error if your function returns null. We'll pass three arguments to your function: <ul class="- topic/ul "><li class="- topic/li ">locator: the string the user passed in</li><li class="- topic/li ">inWindow: the currently selected window</li><li class="- topic/li ">inDocument: the currently selected document</li></ul> The function must return null if the element can't be found.</p>                    </section><section class="- topic/section "><title class="- topic/title ">addScript</title>                            <p class="- topic/p ">addScript(scriptContent, scriptTagId)</p>                            <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments:</b>                            </p>                            <p class="- topic/p "> *scriptcontent - the Javascript content of the script to add</p>                            <p class="- topic/p "> *scriptTagId - (optional) the id of the new script tag. If specified, and an element with this id already exists, this operation will fail.</p>                            <p class="- topic/p ">Loads script content into a new script tag in the Selenium document. This differs from the runScript command in that runScript adds the script tag to the document of the AUT, not the Selenium document. The following entities in the script content are replaced by the characters they represent: &lt; &gt; &amp; The corresponding remove command is removeScript.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">addScriptAndWait</title><p class="- topic/p ">addScriptAndWait(scriptContent, scriptTagId) Generated from addScript(scriptContent, scriptTagId</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*scriptContent - the Javascript content of the script to add *scriptTagId - (optional) the id of the new script tag. If specified, and an element with this id already exists, this operation will fail. Loads script content into a new script tag in the Selenium document. This differs from the runScript command in that runScript adds the script tag to the document of the AUT, not the Selenium document. The following entities in the script content are replaced by the characters they represent: &lt; &gt; &amp; The corresponding remove command is removeScript.</p>                    </section><section class="- topic/section "><title class="- topic/title ">addSelection</title><p class="- topic/p ">addSelection(locator, optionLocator</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> *locator - an element locator identifying a multi-select box *optionLocator - an option locator (a label by default) <p class="- topic/p ">Add a selection to the set of selected options in a multi-select element using an option locator. @see #doSelect for details of option locators</p>                                            </section><section class="- topic/section "><title class="- topic/title ">addSelectionAndWait</title><p class="- topic/p ">addSelectionAndWait(locator, optionLocator)</p><p class="- topic/p "> Generated from addSelection(locator, optionLocator</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> *locator - an element locator identifying a multi-select box *optionLocator - an option locator (a label by default) <p class="- topic/p ">Add a selection to the set of selected options in a multi-select element using an option locator. @see #doSelect for details of option locators</p>                                            </section><section class="- topic/section "><title class="- topic/title ">ajaxWait</title><p class="- topic/p ">ajaxWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">ajaxWaitAndWait</title><p class="- topic/p ">ajaxWaitAndWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">allowNativeXpath</title><p class="- topic/p ">allowNativeXpath(allow</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> *allow - boolean, true means we'll prefer to use native XPath; false means we'll only use JS XPath <p class="- topic/p ">Specifies whether Selenium should use the native in-browser implementation of XPath (if any native version is available); if you pass "false" to this function, we will always use our pure-JavaScript xpath library. Using the pure-JS xpath library can improve the consistency of xpath element locators between different browser vendors, but the pure-JS version is much slower than the native implementations.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">allowNativeXpathAndWait</title><p class="- topic/p ">allowNativeXpathAndWait(allow)</p><p class="- topic/p "> Generated from allowNativeXpath(allow</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> *allow - boolean, true means we'll prefer to use native XPath; false means we'll only use JS XPath <p class="- topic/p ">Specifies whether Selenium should use the native in-browser implementation of XPath (if any native version is available); if you pass "false" to this function, we will always use our pure-JavaScript xpath library. Using the pure-JS xpath library can improve the consistency of xpath element locators between different browser vendors, but the pure-JS version is much slower than the native implementations.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">altKeyDown</title>                            <p class="- topic/p ">altKeyDown()</p>                            <p class="- topic/p ">Press the alt key and hold it down until doAltUp() is called or a new page is loaded.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">altKeyDownAndWait</title>                            <p class="- topic/p ">altKeyDownAndWait() Generated from altKeyDown()</p>                            <p class="- topic/p ">Press the alt key and hold it down until doAltUp() is called or a new page is loaded.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">altKeyUp</title>                            <p class="- topic/p ">altKeyUp()</p>                            <p class="- topic/p ">Release the alt key.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">altKeyUpAndWait</title>                            <p class="- topic/p ">altKeyUpAndWait()</p>                            <p class="- topic/p ">Generated from altKeyUp()</p>                            <p class="- topic/p ">Release the alt key.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">answerOnNextPrompt</title><p class="- topic/p ">answerOnNextPrompt(answer</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*answer - the answer to give in response to the prompt pop-up Instructs Selenium to return the specified answer string in response to the next JavaScript prompt [window.prompt()].</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertAlert</title>                            <p class="- topic/p ">assertAlert(pattern)</p>                            <p class="- topic/p "> Generated from getAlert().</p>                            <p class="- topic/p "> Returns: The message of the most recent JavaScript alert </p>                            <p class="- topic/p ">Retrieves the message of a JavaScript alert generated during the previous action, or fail if there were no alerts.</p>                            <p class="- topic/p ">Getting an alert has the same effect as manually clicking OK. If an alert is generated but you do not consume it with getAlert, the next Selenium action will fail.</p>                            <p class="- topic/p ">Under Selenium, JavaScript alerts will NOT pop up a visible alert dialog.</p>                            <p class="- topic/p ">Selenium does NOT support JavaScript alerts that are generated in a page's onload() event handler. In this case, a visible dialog WILL be generated and Selenium will hang until someone manually clicks OK.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">assertAlertAndWait</title>                            <p class="- topic/p ">assertAlertAndWait(pattern)</p>                            <p class="- topic/p "> Generated from getAlert().</p>                            <p class="- topic/p "> Returns: The message of the most recent JavaScript alert </p>                            <p class="- topic/p ">Retrieves the message of a JavaScript alert generated during the previous action, or fail if there were no alerts.</p>                            <p class="- topic/p ">Getting an alert has the same effect as manually clicking OK. If an alert is generated but you do not consume it with getAlert, the next Selenium action will fail.</p>                            <p class="- topic/p ">Under Selenium, JavaScript alerts will NOT pop up a visible alert dialog.</p>                            <p class="- topic/p ">Selenium does NOT support JavaScript alerts that are generated in a page's onload() event handler. In this case a visible dialog WILL be generated and Selenium will hang until someone manually clicks OK.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">assertAlertNotPresent</title>                            <p class="- topic/p ">assertAlertNotPresent()</p>                            <p class="- topic/p "> Generated from isAlertPresent().</p>                            <p class="- topic/p "> Returns: true if there is an alert </p>                            <p class="- topic/p ">Has an alert occurred?</p>                            <p class="- topic/p ">This function never throws an exception</p>                                            </section><section class="- topic/section "><title class="- topic/title ">assertAlertPresent</title>                            <p class="- topic/p ">assertAlertPresent()</p>                            <p class="- topic/p "> Generated from isAlertPresent().</p>                            <p class="- topic/p "> Returns: true if there is an alert </p>                            <p class="- topic/p ">Has an alert occurred?</p>                            <p class="- topic/p ">This function never throws an exception</p>                                            </section><section class="- topic/section "><title class="- topic/title ">assertAllButtons</title>                            <p class="- topic/p ">assertAllButtons(pattern)</p>                            <p class="- topic/p "> Generated from getAllButtons().</p>                            <p class="- topic/p "> Returns: the IDs of all buttons on the page</p>                            <p class="- topic/p ">Returns the IDs of all buttons on the page.</p>                            <p class="- topic/p ">If a given button has no ID, it will appear as "" in this array.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">assertAllFields</title><p class="- topic/p ">assertAllFields(pattern) Generated from getAllFields(). Returns: the IDs of all field on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertAllLinks</title><p class="- topic/p ">assertAllLinks(pattern) Generated from getAllLinks(). Returns: the IDs of all links on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertAllWindowIds</title><p class="- topic/p ">assertAllWindowIds(pattern) Generated from getAllWindowIds(). Returns: Array of identifiers of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertAllWindowNames</title><p class="- topic/p ">assertAllWindowNames(pattern) Generated from getAllWindowNames(). Returns: Array of names of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertAllWindowTitles</title><p class="- topic/p ">assertAllWindowTitles(pattern) Generated from getAllWindowTitles(). Returns: Array of titles of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertAttribute</title><p class="- topic/p ">assertAttribute(attributeLocator, pattern) Generated from getAttribute(attributeLocator) Arguments: *attributeLocator - an element locator followed by an @ sign and then the name of the attribute, e.g. "foo@bar" . Returns: the value of the specified attr</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertAttributeFromAllWindows</title><p class="- topic/p ">assertAttributeFromAllWindows(attributeName, pattern) Generated from getAttributeFromAllWindows(attributeName</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeName - name of an attribute on the windows . Returns: the set of values of this attribute from all known windows.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertBodyText</title><p class="- topic/p ">assertBodyText(pattern) Generated from getBodyText(). Returns: the entire text of the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertChecked</title><p class="- topic/p ">assertChecked(locator) Generated from isChecked(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to a checkbox or radio button . Returns: true if the checkbox is checked, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertConfirmation</title><p class="- topic/p ">assertConfirmation(pattern) Generated from getConfirmation(). Returns: the message of the most recent JavaScript confirmation dialog</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertConfirmationAndWait</title><p class="- topic/p ">assertConfirmationAndWait(pattern) Generated from getConfirmation(). Returns: the message of the most recent JavaScript confirmation dialog</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertConfirmationNotPresent</title><p class="- topic/p ">assertConfirmationNotPresent() Generated from isConfirmationPresent(). Returns: true if there is a pending confirmation</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertConfirmationPresent</title><p class="- topic/p ">assertConfirmationPresent() Generated from isConfirmationPresent(). Returns: true if there is a pending confirmation</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertCookie</title><p class="- topic/p ">assertCookie(pattern) Generated from getCookie(). Returns: all cookies of the current page under test</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertCookieByName</title><p class="- topic/p ">assertCookieByName(name, pattern) Generated from getCookieByName(name</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie. Returns: the value of the cookie</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertCookieNotPresent</title><p class="- topic/p ">assertCookieNotPresent(name) Generated from isCookiePresent(name</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie. Returns: true if a cookie with the specified name is present, or false otherwise.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertCookiePresent</title><p class="- topic/p ">assertCookiePresent(name) Generated from isCookiePresent(name</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie . Returns: true if a cookie with the specified name is present, or false otherwise.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertCssCount</title><p class="- topic/p ">assertCssCount(css, pattern) Generated from getCssCount(css</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*css - the css selector to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the specified css select</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertCursorPosition</title><p class="- topic/p ">assertCursorPosition(locator, pattern) Generated from getCursorPosition(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an input element or textarea. Returns: the numerical position of the cursor in the field</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertEditable</title><p class="- topic/p ">assertEditable(locator) Generated from isEditable(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: true if the input element is editable, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertElementHeight</title><p class="- topic/p ">assertElementHeight(locator, pattern) Generated from getElementHeight(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element. Returns: height of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertElementIndex</title><p class="- topic/p ">assertElementIndex(locator, pattern) Generated from getElementIndex(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element. Returns: of relative index of the element to its parent (starting from 0)</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertElementNotPresent</title><p class="- topic/p ">assertElementNotPresent(locator) Generated from isElementPresent(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: true if the element is not present, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertElementPositionLeft</title><p class="- topic/p ">assertElementPositionLeft(locator, pattern) Generated from getElementPositionLeft(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself. Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertElementPositionTop</title><p class="- topic/p ">assertElementPositionTop(locator, pattern) Generated from getElementPositionTop(locator) <b class="+ topic/ph hi-d/b "> <b class="+ topic/ph hi-d/b ">Arguments:</b></b>*locator - an element locator pointing to an element OR an element itself. Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertElementPresent</title><p class="- topic/p ">assertElementPresent(locator) Generated from isElementPresent(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: true if the element is present, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertElementWidth</title><p class="- topic/p ">assertElementWidth(locator, pattern) Generated from getElementWidth(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: width of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertEval</title><p class="- topic/p ">assertEval(script, pattern) Generated from getEval(script</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*script - the JavaScript snippet to run. Returns: the results of evaluating the snippet</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertExpression</title><p class="- topic/p ">assertExpression(expression, pattern) Generated from getExpression(expression</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*expression - the value to return. Returns: the value passed in</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertHtmlSource</title><p class="- topic/p ">assertHtmlSource(pattern) Generated from getHtmlSource(). Returns: the entire HTML source</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertLocation</title><p class="- topic/p ">assertLocation(pattern) Generated from getLocation(). Returns: the absolute URL of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertMouseSpeed</title><p class="- topic/p ">assertMouseSpeed(pattern) Generated from getMouseSpeed(). Returns: the number of pixels between "mousemove" events during dragAndDrop commands (default=10)</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotAlert</title><p class="- topic/p ">assertNotAlert(pattern) Generated from getAlert(). Returns: The message of the most recent JavaScript alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotAllButtons</title><p class="- topic/p ">assertNotAllButtons(pattern) Generated from getAllButtons(). Returns: the IDs of all buttons on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotAllFields</title><p class="- topic/p ">assertNotAllFields(pattern) Generated from getAllFields(). Returns: the IDs of all field on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotAllLinks</title><p class="- topic/p ">assertNotAllLinks(pattern) Generated from getAllLinks(). Returns: the IDs of all links on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotAllWindowIds</title><p class="- topic/p ">assertNotAllWindowIds(pattern) Generated from getAllWindowIds(). Returns: Array of identifiers of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotAllWindowNames</title><p class="- topic/p ">assertNotAllWindowNames(pattern) Generated from getAllWindowNames(). Returns: Array of names of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotAllWindowTitles</title><p class="- topic/p ">assertNotAllWindowTitles(pattern) Generated from getAllWindowTitles(). Returns: Array of titles of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotAttribute</title><p class="- topic/p ">assertNotAttribute(attributeLocator, pattern) Generated from getAttribute(attributeLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeLocator - an element locator followed by an @ sign and then the name of the attribute, e.g. "foo@bar" . Returns: the value of the specifie</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertNotAttributeFromAllWindows</title><p class="- topic/p ">assertNotAttributeFromAllWindows(attributeName, pattern) Generated from getAttributeFromAllWindows(attributeName</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeName - name of an attribute on the windows . Returns: the set of values of this attribute from all known windows.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotBodyText</title><p class="- topic/p ">assertNotBodyText(pattern) Generated from getBodyText(). Returns: the entire text of the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotChecked</title><p class="- topic/p ">assertNotChecked(locator) Generated from isChecked(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to a checkbox or radio button. Returns: true if the checkbox is checked, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotConfirmation</title><p class="- topic/p ">assertNotConfirmation(pattern) Generated from getConfirmation(). Returns: the message of the most recent JavaScript confirmation dialog</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotCookie</title><p class="- topic/p ">assertNotCookie(pattern) Generated from getCookie(). Returns: all cookies of the current page under test</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotCookieByName</title><p class="- topic/p ">assertNotCookieByName(name, pattern) Generated from getCookieByName(name</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie. Returns: the value of the cookie</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotCssCount</title><p class="- topic/p ">assertNotCssCount(css, pattern) Generated from getCssCount(css)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*css - the css selector to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the specified css sel</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertNotCursorPosition</title><p class="- topic/p ">assertNotCursorPosition(locator, pattern) Generated from getCursorPosition(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an input element or textarea . Returns: the numerical position of the cursor in the field</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotEditable</title><p class="- topic/p ">assertNotEditable(locator) Generated from isEditable(locator) <b class="+ topic/ph hi-d/b ">Arguments:</b> *locator - an element locator. Returns: true if the input element is editable, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotElementHeight</title><p class="- topic/p ">assertNotElementHeight(locator, pattern) Generated from getElementHeight(locator) <b class="+ topic/ph hi-d/b ">Arguments:</b> *locator - an element locator pointing to an element. Returns: height of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotElementIndex</title><p class="- topic/p ">assertNotElementIndex(locator, pattern) Generated from getElementIndex(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: of relative index of the element to its parent (starting from 0)</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotElementPositionLeft</title><p class="- topic/p ">assertNotElementPositionLeft(locator, pattern) Generated from getElementPositionLeft(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself . Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotElementPositionTop</title><p class="- topic/p ">assertNotElementPositionTop(locator, pattern) Generated from getElementPositionTop(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself. Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotElementWidth</title><p class="- topic/p ">assertNotElementWidth(locator, pattern) Generated from getElementWidth(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element. Returns: width of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotEval</title><p class="- topic/p ">assertNotEval(script, pattern) Generated from getEval(script</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*script - the JavaScript snippet to run . Returns: the results of evaluating the snippet</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotExpression</title><p class="- topic/p ">assertNotExpression(expression, pattern) Generated from getExpression(expression</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*expression - the value to return. Returns: the value passed in</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotHtmlSource</title><p class="- topic/p ">assertNotHtmlSource(pattern) Generated from getHtmlSource(). Returns: the entire HTML source</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotLocation</title><p class="- topic/p ">assertNotLocation(pattern) Generated from getLocation(). Returns: the absolute URL of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotMouseSpeed</title><p class="- topic/p ">assertNotMouseSpeed(pattern) Generated from getMouseSpeed(). Returns: the number of pixels between "mousemove" events during dragAndDrop commands (default=10)</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotOrdered</title><p class="- topic/p ">assertNotOrdered(locator1, locator2) Generated from isOrdered(locator1, locator2</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator1 - an element locator pointing to the first element *locator2 - an element locator pointing to the second element . Returns: true if element1 is the</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertNotPrompt</title><p class="- topic/p ">assertNotPrompt(pattern) Generated from getPrompt(). Returns: the message of the most recent JavaScript question prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotSelectOptions</title><p class="- topic/p ">assertNotSelectOptions(selectLocator, pattern) Generated from getSelectOptions(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all option labels in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotSelectedId</title><p class="- topic/p ">assertNotSelectedId(selectLocator, pattern) Generated from getSelectedId(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: the selected option ID in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotSelectedIds</title><p class="- topic/p ">assertNotSelectedIds(selectLocator, pattern) Generated from getSelectedIds(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option IDs in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotSelectedIndex</title><p class="- topic/p ">assertNotSelectedIndex(selectLocator, pattern) Generated from getSelectedIndex(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: the selected option index in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotSelectedIndexes</title><p class="- topic/p ">assertNotSelectedIndexes(selectLocator, pattern) Generated from getSelectedIndexes(selectLocator) <b class="+ topic/ph hi-d/b ">Arguments:</b> *selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option indexes in the specified select dro</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertNotSelectedLabel</title><p class="- topic/p ">assertNotSelectedLabel(selectLocator, pattern) Generated from getSelectedLabel(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option label in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotSelectedLabels</title><p class="- topic/p ">assertNotSelectedLabels(selectLocator, pattern) Generated from getSelectedLabels(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: an array of all selected option labels in the specified select drop-d</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertNotSelectedValue</title><p class="- topic/p ">assertNotSelectedValue(selectLocator, pattern) Generated from getSelectedValue(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option value in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotSelectedValues</title><p class="- topic/p ">assertNotSelectedValues(selectLocator, pattern) Generated from getSelectedValues(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option values in the specified select drop-</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertNotSomethingSelected</title><p class="- topic/p ">assertNotSomethingSelected(selectLocator) Generated from isSomethingSelected(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: true if some option has been selected, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotSpeed</title><p class="- topic/p ">assertNotSpeed(pattern) Generated from getSpeed(). Returns: the execution speed in milliseconds.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotTable</title><p class="- topic/p ">assertNotTable(tableCellAddress, pattern) Generated from getTable(tableCellAddress</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*tableCellAddress - a cell address, e.g. "foo.1.4" . Returns: the text from the specified cell</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotText</title><p class="- topic/p ">assertNotText(locator, pattern) Generated from getText(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: the text of the element</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotTitle</title><p class="- topic/p ">assertNotTitle(pattern) Generated from getTitle(). Returns: the title of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotValue</title><p class="- topic/p ">assertNotValue(locator, pattern) Generated from getValue(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: the element value, or "on/off" for checkbox/radio elements</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotVisible</title><p class="- topic/p ">assertNotVisible(locator) Generated from isVisible(locator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: true if the specified element is visible, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertNotWhetherThisFrameMatchFrameExpression</title> <p class="- topic/p ">assertNotWhetherThisFrameMatchFrameExpression(currentFrameString, target, pattern) Generated from getWhetherThisFrameMatchFrameExpression(currentFrameString, target</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentFrameString - starting frame *target - new frame (which might be r</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertNotWhetherThisWindowMatchWindowExpression</title> <p class="- topic/p ">assertNotWhetherThisWindowMatchWindowExpression(currentWindowString, target, pattern) Generated from getWhetherThisWindowMatchWindowExpression(currentWindowString, target</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentWindowString - starting window *target - new window (which m</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertNotXpathCount</title><p class="- topic/p ">assertNotXpathCount(xpath, pattern) Generated from getXpathCount(xpath</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*xpath - the xpath expression to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the spe</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertOrdered</title><p class="- topic/p ">assertOrdered(locator1, locator2) Generated from isOrdered(locator1, locator2</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator1 - an element locator pointing to the first element *locator2 - an element locator pointing to the second element. Returns: true if elemen</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertPrompt</title><p class="- topic/p ">assertPrompt(pattern) Generated from getPrompt(). Returns: the message of the most recent JavaScript question prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertPromptAndWait</title><p class="- topic/p ">assertPromptAndWait(pattern) Generated from getPrompt(). Returns: the message of the most recent JavaScript question prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertPromptNotPresent</title><p class="- topic/p ">assertPromptNotPresent() Generated from isPromptPresent(). Returns: true if there is a pending prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertPromptPresent</title><p class="- topic/p ">assertPromptPresent() Generated from isPromptPresent(). Returns: true if there is a pending prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertSelectOptions</title><p class="- topic/p ">assertSelectOptions(selectLocator, pattern) Generated from getSelectOptions(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: an array of all option labels in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertSelectedId</title><p class="- topic/p ">assertSelectedId(selectLocator, pattern) Generated from getSelectedId(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option ID in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertSelectedIds</title><p class="- topic/p ">assertSelectedIds(selectLocator, pattern) Generated from getSelectedIds(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option IDs in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertSelectedIndex</title><p class="- topic/p ">assertSelectedIndex(selectLocator, pattern) Generated from getSelectedIndex(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option index in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertSelectedIndexes</title><p class="- topic/p ">assertSelectedIndexes(selectLocator, pattern) Generated from getSelectedIndexes(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option indexes in the specified select drop-</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertSelectedLabel</title><p class="- topic/p ">assertSelectedLabel(selectLocator, pattern) Generated from getSelectedLabel(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option label in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertSelectedLabels</title><p class="- topic/p ">assertSelectedLabels(selectLocator, pattern) Generated from getSelectedLabels(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option labels in the specified select drop-dow</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertSelectedValue</title><p class="- topic/p ">assertSelectedValue(selectLocator, pattern) Generated from getSelectedValue(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option value in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertSelectedValues</title><p class="- topic/p ">assertSelectedValues(selectLocator, pattern) Generated from getSelectedValues(selectLocator</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option values in the specified select drop-dow</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertSomethingSelected</title>                            <p class="- topic/p ">assertSomethingSelected(selectLocator)</p>                            <p class="- topic/p "> Generated from isSomethingSelected(selectLocator)</p>                            <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p>                            <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu .</p>                            <p class="- topic/p "> Returns: true if some option has been selected, false otherwise </p>                                            </section><section class="- topic/section "><title class="- topic/title ">assertSpeed</title><p class="- topic/p ">assertSpeed(pattern) Generated from getSpeed(). Returns: the execution speed in milliseconds.</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertTable</title><p class="- topic/p ">assertTable(tableCellAddress, pattern) Generated from getTable(tableCellAddress)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*tableCellAddress - a cell address, e.g. "foo.1.4" . Returns: the text from the specified cell</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertText</title>                            <p class="- topic/p ">assertText(locator, pattern)</p>                            <p class="- topic/p "> Generated from getText(locator)</p>                            <p class="- topic/p ">Arguments:</p>                            <p class="- topic/p "> *locator - an element locator .</p>                            <p class="- topic/p "> Returns: the text of the element </p>                                            </section><section class="- topic/section "><title class="- topic/title ">assertTextAndWait</title><p class="- topic/p ">assertTextAndWait(locator, pattern) Generated from getText(locator) Arguments: *locator - an element locator . Returns: the text of the element</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertTextNotPresent</title><p class="- topic/p ">assertTextNotPresent(pattern) This command is deprecated. Use the assertNotText command with an element locator instead. Generated from isTextPresent(pattern) Arguments: *pattern - a pattern to match with the text of the page . Returns: true if the patt</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertTextPresent</title><p class="- topic/p ">assertTextPresent(pattern) This command is deprecated. Use the assertText command with an element locator instead. Generated from isTextPresent(pattern) Arguments: *pattern - a pattern to match with the text of the page . Returns: true if the pattern m</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertTitle</title><p class="- topic/p ">assertTitle(pattern) Generated from getTitle(). Returns: the title of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertTitleAndWait</title><p class="- topic/p ">assertTitleAndWait(pattern) Generated from getTitle(). Returns: the title of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertValue</title><p class="- topic/p ">assertValue(locator, pattern) Generated from getValue(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: the element value, or "on/off" for checkbox/radio elements</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertVisible</title><p class="- topic/p ">assertVisible(locator) Generated from isVisible(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: true if the specified element is visible, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">assertWhetherThisFrameMatchFrameExpression</title><p class="- topic/p ">assertWhetherThisFrameMatchFrameExpression(currentFrameString, target, pattern) Generated from getWhetherThisFrameMatchFrameExpression(currentFrameString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentFrameString - starting frame *target - new frame (which might be rela</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertWhetherThisWindowMatchWindowExpression</title> <p class="- topic/p ">assertWhetherThisWindowMatchWindowExpression(currentWindowString, target, pattern) Generated from getWhetherThisWindowMatchWindowExpression(currentWindowString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentWindowString - starting window *target - new window (which migh</p>                    </section><section class="- topic/section "><title class="- topic/title ">assertXpathCount</title><p class="- topic/p ">assertXpathCount(xpath, pattern) Generated from getXpathCount(xpath)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*xpath - the xpath expression to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the specif</p>                    </section><section class="- topic/section "><title class="- topic/title ">assignId</title><p class="- topic/p ">assignId(locator, identifier)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element *identifier - a string to be used as the ID of the specified element</p>                     </section><section class="- topic/section "><title class="- topic/title ">assignIdAndWait</title><p class="- topic/p ">assignIdAndWait(locator, identifier) Generated from assignId(locator, identifier)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element *identifier - a string to be used as the ID of the specified element</p>                     </section><section class="- topic/section "><title class="- topic/title ">break</title><p class="- topic/p ">break()</p>                    </section><section class="- topic/section "><title class="- topic/title ">captureEntirePageScreenshot</title><p class="- topic/p ">captureEntirePageScreenshot(filename, kwargs) <b class="+ topic/ph hi-d/b ">Arguments</b>: *filename - the path to the file to persist the screenshot as. No filename extension will be appended by default. Directories will not be created if they do not exist, and an ex</p>                    </section><section class="- topic/section "><title class="- topic/title ">captureEntirePageScreenshotAndWait</title><p class="- topic/p ">captureEntirePageScreenshotAndWait(filename, kwargs) Generated from captureEntirePageScreenshot(filename, kwargs)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*filename - the path to the file to persist the screenshot as. No filename extension will be appended by default. Directories w</p>                    </section><section class="- topic/section "><title class="- topic/title ">check</title><p class="- topic/p ">check(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">checkAndWait</title><p class="- topic/p ">checkAndWait(locator) Generated from check(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">chooseCancelOnNextConfirmation</title><p class="- topic/p ">chooseCancelOnNextConfirmation()</p>                    </section><section class="- topic/section "><title class="- topic/title ">chooseCancelOnNextPrompt</title><p class="- topic/p ">chooseCancelOnNextPrompt</p>                    </section><section class="- topic/section "><title class="- topic/title ">chooseCancelOnNextPromptAndWait</title><p class="- topic/p ">chooseCancelOnNextPromptAndWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">chooseOkOnNextConfirmation</title><p class="- topic/p ">chooseOkOnNextConfirmation()</p>                    </section><section class="- topic/section "><title class="- topic/title ">chooseOkOnNextConfirmationAndWait</title><p class="- topic/p ">chooseOkOnNextConfirmationAndWait() Generated from chooseOkOnNextConfirmation()</p>                    </section><section class="- topic/section "><title class="- topic/title ">click</title><p class="- topic/p ">click(locator)</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> *locator - an element locator <p class="- topic/p ">Clicks on a link, button, checkbox or radio button. If the click action causes a new page to load (like a link usually does), call waitForPageToLoad.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">clickAndWait</title><p class="- topic/p ">clickAndWait(locator)</p><p class="- topic/p "> Generated from click(locator)</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> *locator - an element locator <p class="- topic/p ">Clicks on a link, button, checkbox or radio button. If the click action causes a new page to load (like a link usually does), call waitForPageToLoad.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">clickAt</title><p class="- topic/p ">clickAt(locator, coordString)</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> *locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator. <p class="- topic/p ">Clicks on a link, button, checkbox or radio button. If the click action causes a new page to load (like a link usually does), call waitForPageToLoad.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">clickAtAndWait</title><p class="- topic/p ">clickAtAndWait(locator, coordString)</p><p class="- topic/p "> Generated from clickAt(locator, coordString)</p><p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> *locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator. <p class="- topic/p ">Clicks on a link, button, checkbox or radio button. If the click action causes a new page to load (like a link usually does), call waitForPageToLoad.</p>                                            </section><section class="- topic/section "><title class="- topic/title ">close</title><p class="- topic/p ">close()</p>                    </section><section class="- topic/section "><title class="- topic/title ">contextMenu</title><p class="- topic/p ">contextMenu(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                     </section><section class="- topic/section "><title class="- topic/title ">contextMenuAndWait</title><p class="- topic/p ">contextMenuAndWait(locator) Generated from contextMenu(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                     </section><section class="- topic/section "><title class="- topic/title ">contextMenuAt</title><p class="- topic/p ">contextMenuAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator.</p>                     </section><section class="- topic/section "><title class="- topic/title ">contextMenuAtAndWait</title><p class="- topic/p ">contextMenuAtAndWait(locator, coordString) Generated from contextMenuAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the</p>                     </section><section class="- topic/section "><title class="- topic/title ">controlKeyDown</title><p class="- topic/p ">controlKeyDown()</p>                    </section><section class="- topic/section "><title class="- topic/title ">controlKeyDownAndWait</title><p class="- topic/p ">controlKeyDownAndWait() Generated from controlKeyDown()</p>                    </section><section class="- topic/section "><title class="- topic/title ">controlKeyUp</title><p class="- topic/p ">controlKeyUp()</p>                    </section><section class="- topic/section "><title class="- topic/title ">controlKeyUpAndWait</title><p class="- topic/p ">controlKeyUpAndWait() Generated from controlKeyUp()</p>                    </section><section class="- topic/section "><title class="- topic/title ">createCookie</title><p class="- topic/p ">createCookie(nameValuePair, optionsString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*nameValuePair - name and value of the cookie in a format "name=value" *optionsString - options for the cookie. Currently supported options include 'path', 'max_age' and 'domain'. the optionsString'</p>                    </section><section class="- topic/section "><title class="- topic/title ">createCookieAndWait</title><p class="- topic/p ">createCookieAndWait(nameValuePair, optionsString) Generated from createCookie(nameValuePair, optionsString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*nameValuePair - name and value of the cookie in a format "name=value" *optionsString - options for the cookie. Currently supported</p>                     </section><section class="- topic/section "><title class="- topic/title ">deleteAllVisibleCookies</title><p class="- topic/p ">deleteAllVisibleCookies()</p>                    </section><section class="- topic/section "><title class="- topic/title ">deleteAllVisibleCookiesAndWait</title><p class="- topic/p ">deleteAllVisibleCookiesAndWait() Generated from deleteAllVisibleCookies()</p>                    </section><section class="- topic/section "><title class="- topic/title ">deleteCookie</title><p class="- topic/p ">deleteCookie(name, optionsString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie to be deleted *optionsString - options for the cookie. Currently supported options include 'path', 'domain' and 'recurse.' The optionsString's format is "path=/path/, domain=.f</p>                    </section><section class="- topic/section "><title class="- topic/title ">deleteCookieAndWait</title><p class="- topic/p ">deleteCookieAndWait(name, optionsString) Generated from deleteCookie(name, optionsString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie to be deleted *optionsString - options for the cookie. Currently supported options include 'path', 'domain' and 'recur</p>                    </section><section class="- topic/section "><title class="- topic/title ">deselectPopUp</title><p class="- topic/p ">deselectPopUp()</p>                    </section><section class="- topic/section "><title class="- topic/title ">deselectPopUpAndWait</title><p class="- topic/p ">deselectPopUpAndWait() Generated from deselectPopUp()</p>                    </section><section class="- topic/section "><title class="- topic/title ">domWait</title><p class="- topic/p ">domWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">domWaitAndWait</title><p class="- topic/p ">domWaitAndWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">doubleClick</title><p class="- topic/p ">doubleClick(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                     </section><section class="- topic/section "><title class="- topic/title ">doubleClickAndWait</title><p class="- topic/p ">doubleClickAndWait(locator) Generated from doubleClick(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                     </section><section class="- topic/section "><title class="- topic/title ">doubleClickAt</title><p class="- topic/p ">doubleClickAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator.</p>                     </section><section class="- topic/section "><title class="- topic/title ">doubleClickAtAndWait</title><p class="- topic/p ">doubleClickAtAndWait(locator, coordString) Generated from doubleClickAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the</p>                     </section><section class="- topic/section "><title class="- topic/title ">dragAndDrop</title><p class="- topic/p ">dragAndDrop(locator, movementsString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *movementsString - offset in pixels from the current location to which the element should be moved, e.g., "+70,-300"</p>                     </section><section class="- topic/section "><title class="- topic/title ">dragAndDropAndWait</title><p class="- topic/p ">dragAndDropAndWait(locator, movementsString) Generated from dragAndDrop(locator, movementsString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *movementsString - offset in pixels from the current location to which the element should be moved, e.g., "+70,-</p>                    </section><section class="- topic/section "><title class="- topic/title ">dragAndDropToObject</title><p class="- topic/p ">dragAndDropToObject(locatorOfObjectToBeDragged, locatorOfDragDestinationObject)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locatorOfObjectToBeDragged - an element to be dragged *locatorOfDragDestinationObject - an element whose location (i.e., whose center-most pixel) will be the po</p>                    </section><section class="- topic/section "><title class="- topic/title ">dragAndDropToObjectAndWait</title><p class="- topic/p ">dragAndDropToObjectAndWait(locatorOfObjectToBeDragged, locatorOfDragDestinationObject) Generated from dragAndDropToObject(locatorOfObjectToBeDragged, locatorOfDragDestinationObject)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locatorOfObjectToBeDragged - an element to be dragged *lo</p>                    </section><section class="- topic/section "><title class="- topic/title ">echo</title><p class="- topic/p ">echo(message) <b class="+ topic/ph hi-d/b ">Arguments</b>: *message - the message to print</p>                     </section><section class="- topic/section "><title class="- topic/title ">echoAndWait</title><p class="- topic/p ">echoAndWait(message) Generated from echo(message)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*message - the message to print</p>                     </section><section class="- topic/section "><title class="- topic/title ">editContent</title><p class="- topic/p ">editContent</p>                    </section><section class="- topic/section "><title class="- topic/title ">editContentAndWait</title><p class="- topic/p ">editContentAndWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">fireEvent</title><p class="- topic/p ">fireEvent(locator, eventName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *eventName - the event name, e.g. "focus" or "blur"</p>                     </section><section class="- topic/section "><title class="- topic/title ">fireEventAndWait</title><p class="- topic/p ">fireEventAndWait(locator, eventName) Generated from fireEvent(locator, eventName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *eventName - the event name, e.g. "focus" or "blur"</p>                     </section><section class="- topic/section "><title class="- topic/title ">focus</title><p class="- topic/p ">focus(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">focusAndWait</title><p class="- topic/p ">focusAndWait(locator) Generated from focus(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">goBack</title><p class="- topic/p ">goBack()</p>                    </section><section class="- topic/section "><title class="- topic/title ">goBackAndWait</title><p class="- topic/p ">goBackAndWait() Generated from goBack()</p>                    </section><section class="- topic/section "><title class="- topic/title ">highlight</title><p class="- topic/p ">highlight(locator) Arguments: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">highlightAndWait</title><p class="- topic/p ">highlightAndWait(locator) Generated from highlight(locator) Arguments: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">ignoreAttributesWithoutValue</title><p class="- topic/p ">ignoreAttributesWithoutValue(ignore) <b class="+ topic/ph hi-d/b ">Arguments</b>: *ignore - boolean, true means we'll ignore attributes without value at the expense of xpath "correctness"; false means we'll sacrifice speed for correctness.</p>                     </section><section class="- topic/section "><title class="- topic/title ">ignoreAttributesWithoutValueAndWait</title><p class="- topic/p ">ignoreAttributesWithoutValueAndWait(ignore) Generated from ignoreAttributesWithoutValue(ignore)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*ignore - boolean, true means we'll ignore attributes without value at the expense of xpath "correctness"; false means we'll sacrifice speed for</p>                     </section><section class="- topic/section "><title class="- topic/title ">keyDown</title><p class="- topic/p ">keyDown(locator, keySequence) This command is deprecated. Use the sendKeys command instead.</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *keySequence - Either be a string("\" followed by the numeric keycode of the keytobe pressed, normally theASCIIvalu</p>                    </section><section class="- topic/section "><title class="- topic/title ">keyDownAndWait</title><p class="- topic/p ">keyDownAndWait(locator, keySequence) This command is deprecated. Use the sendKeysAndWait command instead. Generated from keyDown(locator, keySequence)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *keySequence - Either be a string("\" followed by the numeric</p>                    </section><section class="- topic/section "><title class="- topic/title ">keyPress</title><p class="- topic/p ">keyPress(locator, keySequence) This command is deprecated. Use the sendKeys command instead.</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *keySequence - Either be a string("\" followed by the numeric keycode of the keytobe pressed, normally the ASCIIval</p>                    </section><section class="- topic/section "><title class="- topic/title ">keyPressAndWait</title><p class="- topic/p ">keyPressAndWait(locator, keySequence) This command is deprecated. Use the sendKeysAndWait command instead. Generated from keyPress(locator, keySequence)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *keySequence - Either be a string("\" followed bythenumer</p>                    </section><section class="- topic/section "><title class="- topic/title ">keyUp</title><p class="- topic/p ">keyUp(locator, keySequence) This command is deprecated. Use the sendKeys command instead.</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *keySequence - Either be a string("\" followed by the numeric keycode of the key to be pressed, normally the ASCII value</p>                     </section><section class="- topic/section "><title class="- topic/title ">keyUpAndWait</title><p class="- topic/p ">keyUpAndWait(locator, keySequence) This command is deprecated. Use the sendKeysAndWait command instead. Generated from keyUp(locator, keySequence)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *keySequence - Either be a string("\" followed by the numeric ke</p>                    </section><section class="- topic/section "><title class="- topic/title ">metaKeyDown</title><p class="- topic/p ">metaKeyDown()</p>                    </section><section class="- topic/section "><title class="- topic/title ">metaKeyDownAndWait</title><p class="- topic/p ">metaKeyDownAndWait() Generated from metaKeyDown()</p>                    </section><section class="- topic/section "><title class="- topic/title ">metaKeyUp</title><p class="- topic/p ">metaKeyUp()</p>                    </section><section class="- topic/section "><title class="- topic/title ">metaKeyUpAndWait</title><p class="- topic/p ">metaKeyUpAndWait() Generated from metaKeyUp()</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseDown</title><p class="- topic/p ">mouseDown(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseDownAndWait</title><p class="- topic/p ">mouseDownAndWait(locator) Generated from mouseDown(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseDownAt</title><p class="- topic/p ">mouseDownAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator.</p>                     </section><section class="- topic/section "><title class="- topic/title ">mouseDownAtAndWait</title><p class="- topic/p ">mouseDownAtAndWait(locator, coordString) Generated from mouseDownAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by</p>                     </section><section class="- topic/section "><title class="- topic/title ">mouseDownRight</title><p class="- topic/p ">mouseDownRight(locator) Arguments: *locator - an element locator</p>                     </section><section class="- topic/section "><title class="- topic/title ">mouseDownRightAndWait</title><p class="- topic/p ">mouseDownRightAndWait(locator) Generated from mouseDownRight(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseDownRightAt</title><p class="- topic/p ">mouseDownRightAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator.</p>                     </section><section class="- topic/section "><title class="- topic/title ">mouseDownRightAtAndWait</title><p class="- topic/p ">mouseDownRightAtAndWait(locator, coordString) Generated from mouseDownRightAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element re</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseMove</title><p class="- topic/p ">mouseMove(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseMoveAndWait</title><p class="- topic/p ">mouseMoveAndWait(locator) Generated from mouseMove(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseMoveAt</title><p class="- topic/p ">mouseMoveAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator.</p>                     </section><section class="- topic/section "><title class="- topic/title ">mouseMoveAtAndWait</title><p class="- topic/p ">mouseMoveAtAndWait(locator, coordString) Generated from mouseMoveAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by</p>                     </section><section class="- topic/section "><title class="- topic/title ">mouseOut</title><p class="- topic/p ">mouseOut(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseOutAndWait</title><p class="- topic/p ">mouseOutAndWait(locator) Generated from mouseOut(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseOver</title><p class="- topic/p ">mouseOver(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseOverAndWait</title><p class="- topic/p ">mouseOverAndWait(locator) Generated from mouseOver(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseUp</title><p class="- topic/p ">mouseUp(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseUpAndWait</title><p class="- topic/p ">mouseUpAndWait(locator) Generated from mouseUp(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseUpAt</title><p class="- topic/p ">mouseUpAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator.</p>                     </section><section class="- topic/section "><title class="- topic/title ">mouseUpAtAndWait</title><p class="- topic/p ">mouseUpAtAndWait(locator, coordString) Generated from mouseUpAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the</p>                     </section><section class="- topic/section "><title class="- topic/title ">mouseUpRight</title><p class="- topic/p ">mouseUpRight(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseUpRightAndWait</title><p class="- topic/p ">mouseUpRightAndWait(locator) Generated from mouseUpRight(locator) Arguments: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">mouseUpRightAt</title><p class="- topic/p ">mouseUpRightAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator.</p>                     </section><section class="- topic/section "><title class="- topic/title ">mouseUpRightAtAndWait</title><p class="- topic/p ">mouseUpRightAtAndWait(locator, coordString) Generated from mouseUpRightAt(locator, coordString)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *coordString - specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element return</p>                    </section><section class="- topic/section "><title class="- topic/title ">open</title><p class="- topic/p ">open(url) <b class="+ topic/ph hi-d/b ">Arguments</b>: *url - the URL to open; may be relative or absolute</p>                     </section><section class="- topic/section "><title class="- topic/title ">openWindow</title><p class="- topic/p ">openWindow(url, windowID)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*url - the URL to open, which can be blank *windowID - the JavaScript window ID of the window to select</p>                     </section><section class="- topic/section "><title class="- topic/title ">openWindowAndWait</title><p class="- topic/p ">openWindowAndWait(url, windowID) Generated from openWindow(url, windowID)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*url - the URL to open, which can be blank *windowID - the JavaScript window ID of the window to select</p>                     </section><section class="- topic/section "><title class="- topic/title ">pageWait</title><p class="- topic/p ">pageWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">pageWaitAndWait</title><p class="- topic/p ">pageWaitAndWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">pause</title><p class="- topic/p ">pause(waitTime) Arguments: *waitTime - the amount of time to sleep (in milliseconds)</p>                     </section><section class="- topic/section "><title class="- topic/title ">prePageWait</title><p class="- topic/p ">prePageWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">prePageWaitAndWait</title><p class="- topic/p ">prePageWaitAndWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">refresh</title><p class="- topic/p ">refresh()</p>                    </section><section class="- topic/section "><title class="- topic/title ">refreshAndWait</title><p class="- topic/p ">refreshAndWait() Generated from refresh()</p>                    </section><section class="- topic/section "><title class="- topic/title ">removeAllSelections</title><p class="- topic/p ">removeAllSelections(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator identifying a multi-select box</p>                     </section><section class="- topic/section "><title class="- topic/title ">removeAllSelectionsAndWait</title><p class="- topic/p ">removeAllSelectionsAndWait(locator) Generated from removeAllSelections(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator identifying a multi-select box</p>                     </section><section class="- topic/section "><title class="- topic/title ">removeScript</title><p class="- topic/p ">removeScript(scriptTagId) <b class="+ topic/ph hi-d/b ">Arguments</b>: *scriptTagId - the id of the script element to remove.</p>                     </section><section class="- topic/section "><title class="- topic/title ">removeScriptAndWait</title><p class="- topic/p ">removeScriptAndWait(scriptTagId) Generated from removeScript(scriptTagId)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*scriptTagId - the id of the script element to remove.</p>                     </section><section class="- topic/section "><title class="- topic/title ">removeSelection</title><p class="- topic/p ">removeSelection(locator, optionLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator identifying a multi-select box *optionLocator - an option locator (a label by default)</p>                     </section><section class="- topic/section "><title class="- topic/title ">removeSelectionAndWait</title><p class="- topic/p ">removeSelectionAndWait(locator, optionLocator) Generated from removeSelection(locator, optionLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator identifying a multi-select box *optionLocator - an option locator (a label by default)</p>                     </section><section class="- topic/section "><title class="- topic/title ">rollup</title><p class="- topic/p ">rollup(rollupName, kwargs)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*rollupName - the name of the rollup command *kwargs - keyword arguments string that influences how the rollup expands into commands</p>                     </section><section class="- topic/section "><title class="- topic/title ">rollupAndWait</title><p class="- topic/p ">rollupAndWait(rollupName, kwargs) Generated from rollup(rollupName, kwargs)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*rollupName - the name of the rollup command *kwargs - keyword arguments string that influences how the rollup expands into commands</p>                     </section><section class="- topic/section "><title class="- topic/title ">runScript</title><p class="- topic/p ">runScript(script) <b class="+ topic/ph hi-d/b ">Arguments</b>: *script - the JavaScript snippet to run</p>                     </section><section class="- topic/section "><title class="- topic/title ">runScriptAndWait</title><p class="- topic/p ">runScriptAndWait(script) Generated from runScript(script)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*script - the JavaScript snippet to run</p>                     </section><section class="- topic/section "><title class="- topic/title ">select</title><p class="- topic/p ">select(selectLocator, optionLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu *optionLocator - an option locator (a label by default)</p>                     </section><section class="- topic/section "><title class="- topic/title ">selectAndWait</title><p class="- topic/p ">selectAndWait(selectLocator, optionLocator) Generated from select(selectLocator, optionLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu *optionLocator - an option locator (a label by default)</p>                     </section><section class="- topic/section "><title class="- topic/title ">selectFrame</title><p class="- topic/p ">selectFrame(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator identifying a frame or iframe</p>                     </section><section class="- topic/section "><title class="- topic/title ">selectPopUp</title><p class="- topic/p ">selectPopUp(windowID) <b class="+ topic/ph hi-d/b ">Arguments</b>: *windowID - an identifier for the popup window, which can take on a number of different meanings</p>                     </section><section class="- topic/section "><title class="- topic/title ">selectPopUpAndWait</title><p class="- topic/p ">selectPopUpAndWait(windowID) Generated from selectPopUp(windowID)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*windowID - an identifier for the popup window, which can take on a number of different meanings</p>                     </section><section class="- topic/section "><title class="- topic/title ">selectWindow</title><p class="- topic/p ">selectWindow(windowID) <b class="+ topic/ph hi-d/b ">Arguments</b>: *windowID - the JavaScript window ID of the window to select</p>                     </section><section class="- topic/section "><title class="- topic/title ">sendKeys</title><p class="- topic/p ">sendKeys(locator, value)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *value - the value to type</p>                     </section><section class="- topic/section "><title class="- topic/title ">sendKeysAndWait</title><p class="- topic/p ">sendKeysAndWait(locator, value) Generated from sendKeys(locator, value)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *value - the value to type</p>                     </section><section class="- topic/section "><title class="- topic/title ">setCursorPosition</title><p class="- topic/p ">setCursorPosition(locator, position)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an input element or textarea *position - the numerical position of the cursor in the field; position should be 0 to move the position to the beginning of the</p>                     </section><section class="- topic/section "><title class="- topic/title ">setCursorPositionAndWait</title><p class="- topic/p ">setCursorPositionAndWait(locator, position) Generated from setCursorPosition(locator, position)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an input element or textarea *position - the numerical position of the cursor in the field; positio</p>                    </section><section class="- topic/section "><title class="- topic/title ">setMouseSpeed</title><p class="- topic/p ">setMouseSpeed(pixels) <b class="+ topic/ph hi-d/b ">Arguments</b>: *pixels - the number of pixels between "mousemove" events</p>                     </section><section class="- topic/section "><title class="- topic/title ">setMouseSpeedAndWait</title><p class="- topic/p ">setMouseSpeedAndWait(pixels) Generated from setMouseSpeed(pixels)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*pixels - the number of pixels between "mousemove" events</p>                     </section><section class="- topic/section "><title class="- topic/title ">setSpeed</title><p class="- topic/p ">setSpeed(value) <b class="+ topic/ph hi-d/b ">Arguments</b>: *value - the number of milliseconds to pause after operation</p>                     </section><section class="- topic/section "><title class="- topic/title ">setSpeedAndWait</title><p class="- topic/p ">setSpeedAndWait(value) Generated from setSpeed(value)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*value - the number of milliseconds to pause after operation</p>                     </section><section class="- topic/section "><title class="- topic/title ">setTimeout</title><p class="- topic/p ">setTimeout(timeout) <b class="+ topic/ph hi-d/b ">Arguments</b>: *timeout - a timeout in milliseconds, after which the action will return with an error</p>                     </section><section class="- topic/section "><title class="- topic/title ">shiftKeyDown</title><p class="- topic/p ">shiftKeyDown()</p>                    </section><section class="- topic/section "><title class="- topic/title ">shiftKeyDownAndWait</title><p class="- topic/p ">shiftKeyDownAndWait() Generated from shiftKeyDown()</p>                    </section><section class="- topic/section "><title class="- topic/title ">shiftKeyUp</title><p class="- topic/p ">shiftKeyUp()</p>                    </section><section class="- topic/section "><title class="- topic/title ">shiftKeyUpAndWait</title><p class="- topic/p ">shiftKeyUpAndWait() Generated from shiftKeyUp()</p>                    </section><section class="- topic/section "><title class="- topic/title ">showElement</title><p class="- topic/p ">showElement</p>                    </section><section class="- topic/section "><title class="- topic/title ">showElementAndWait</title><p class="- topic/p ">showElementAndWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">store</title><p class="- topic/p ">store(expression, variableName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*expression - the value to store *variableName - the name of a variable in which the result is to be stored.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAlert</title><p class="- topic/p ">storeAlert(variableName) Generated from getAlert(). Returns: The message of the most recent JavaScript alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAlertPresent</title><p class="- topic/p ">storeAlertPresent(variableName) Generated from isAlertPresent(). Returns: true if there is an alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAllButtons</title><p class="- topic/p ">storeAllButtons(variableName) Generated from getAllButtons(). Returns: the IDs of all buttons on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAllFields</title><p class="- topic/p ">storeAllFields(variableName) Generated from getAllFields(). Returns: the IDs of all field on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAllLinks</title><p class="- topic/p ">storeAllLinks(variableName) Generated from getAllLinks(). Returns: the IDs of all links on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAllWindowIds</title><p class="- topic/p ">storeAllWindowIds(variableName) Generated from getAllWindowIds(). Returns: Array of identifiers of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAllWindowNames</title><p class="- topic/p ">storeAllWindowNames(variableName) Generated from getAllWindowNames(). Returns: Array of names of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAllWindowTitles</title><p class="- topic/p ">storeAllWindowTitles(variableName) Generated from getAllWindowTitles(). Returns: Array of titles of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAndWait</title><p class="- topic/p ">storeAndWait(expression, variableName) Generated from store(expression, variableName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*expression - the value to store *variableName - the name of a variable in which the result is to be stored.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeAttribute</title><p class="- topic/p ">storeAttribute(attributeLocator, variableName) Generated from getAttribute(attributeLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeLocator - an element locator followed by an @ sign and then the name of the attribute, e.g. "foo@bar" . Returns: the value of the specifie</p>                    </section><section class="- topic/section "><title class="- topic/title ">storeAttributeFromAllWindows</title><p class="- topic/p ">storeAttributeFromAllWindows(attributeName, variableName) Generated from getAttributeFromAllWindows(attributeName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeName - name of an attribute on the windows . Returns: the set of values of this attribute from all known windows.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeBodyText</title><p class="- topic/p ">storeBodyText(variableName) Generated from getBodyText(). Returns: the entire text of the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeChecked</title><p class="- topic/p ">storeChecked(locator, variableName) Generated from isChecked(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to a checkbox or radio button . Returns: true if the checkbox is checked, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeConfirmation</title><p class="- topic/p ">storeConfirmation(variableName) Generated from getConfirmation(). Returns: the message of the most recent JavaScript confirmation dialog</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeConfirmationPresent</title><p class="- topic/p ">storeConfirmationPresent(variableName) Generated from isConfirmationPresent(). Returns: true if there is a pending confirmation</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeCookie</title><p class="- topic/p ">storeCookie(variableName) Generated from getCookie(). Returns: all cookies of the current page under test</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeCookieByName</title><p class="- topic/p ">storeCookieByName(name, variableName) Generated from getCookieByName(name)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie . Returns: the value of the cookie</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeCookiePresent</title><p class="- topic/p ">storeCookiePresent(name, variableName) Generated from isCookiePresent(name)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie . Returns: true if a cookie with the specified name is present, or false otherwise.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeCssCount</title><p class="- topic/p ">storeCssCount(css, variableName) Generated from getCssCount(css)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*css - the css selector to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the specified css sel</p>                    </section><section class="- topic/section "><title class="- topic/title ">storeCursorPosition</title><p class="- topic/p ">storeCursorPosition(locator, variableName) Generated from getCursorPosition(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an input element or textarea . Returns: the numerical position of the cursor in the field</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeEditable</title><p class="- topic/p ">storeEditable(locator, variableName) Generated from isEditable(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator . Returns: true if the input element is editable, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeElementHeight</title><p class="- topic/p ">storeElementHeight(locator, variableName) Generated from getElementHeight(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: height of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeElementIndex</title><p class="- topic/p ">storeElementIndex(locator, variableName) Generated from getElementIndex(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: of relative index of the element to its parent (starting from 0)</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeElementPositionLeft</title><p class="- topic/p ">storeElementPositionLeft(locator, variableName) Generated from getElementPositionLeft(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself . Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeElementPositionTop</title><p class="- topic/p ">storeElementPositionTop(locator, variableName) Generated from getElementPositionTop(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself . Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeElementPresent</title><p class="- topic/p ">storeElementPresent(locator, variableName) Generated from isElementPresent(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator . Returns: true if the element is present, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeElementWidth</title><p class="- topic/p ">storeElementWidth(locator, variableName) Generated from getElementWidth(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: width of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeEval</title><p class="- topic/p ">storeEval(script, variableName) Generated from getEval(script)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*script - the JavaScript snippet to run . Returns: the results of evaluating the snippet</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeExpression</title><p class="- topic/p ">storeExpression(expression, variableName) Generated from getExpression(expression)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*expression - the value to return . Returns: the value passed in</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeHtmlSource</title><p class="- topic/p ">storeHtmlSource(variableName) Generated from getHtmlSource(). Returns: the entire HTML source</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeLocation</title><p class="- topic/p ">storeLocation(variableName) Generated from getLocation(). Returns: the absolute URL of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeMouseSpeed</title><p class="- topic/p ">storeMouseSpeed(variableName) Generated from getMouseSpeed(). Returns: the number of pixels between "mousemove" events during dragAndDrop commands (default=10)</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeOrdered</title><p class="- topic/p ">storeOrdered(locator1, locator2, variableName) Generated from isOrdered(locator1, locator2)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator1 - an element locator pointing to the first element *locator2 - an element locator pointing to the second element . Returns: true</p>                    </section><section class="- topic/section "><title class="- topic/title ">storePrompt</title><p class="- topic/p ">storePrompt(variableName) Generated from getPrompt(). Returns: the message of the most recent JavaScript question prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">storePromptPresent</title><p class="- topic/p ">storePromptPresent(variableName) Generated from isPromptPresent(). Returns: true if there is a pending prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeSelectOptions</title><p class="- topic/p ">storeSelectOptions(selectLocator, variableName) Generated from getSelectOptions(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all option labels in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeSelectedId</title><p class="- topic/p ">storeSelectedId(selectLocator, variableName) Generated from getSelectedId(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option ID in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeSelectedIds</title><p class="- topic/p ">storeSelectedIds(selectLocator, variableName) Generated from getSelectedIds(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option IDs in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeSelectedIndex</title><p class="- topic/p ">storeSelectedIndex(selectLocator, variableName) Generated from getSelectedIndex(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option index in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeSelectedIndexes</title><p class="- topic/p ">storeSelectedIndexes(selectLocator, variableName) Generated from getSelectedIndexes(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option indexes in the specified selec</p>                    </section><section class="- topic/section "><title class="- topic/title ">storeSelectedLabel</title><p class="- topic/p ">storeSelectedLabel(selectLocator, variableName) Generated from getSelectedLabel(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option label in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeSelectedLabels</title><p class="- topic/p ">storeSelectedLabels(selectLocator, variableName) Generated from getSelectedLabels(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option labels in the specified select d</p>                    </section><section class="- topic/section "><title class="- topic/title ">storeSelectedValue</title><p class="- topic/p ">storeSelectedValue(selectLocator, variableName) Generated from getSelectedValue(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option value in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeSelectedValues</title><p class="- topic/p ">storeSelectedValues(selectLocator, variableName) Generated from getSelectedValues(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option values in the specified select d</p>                    </section><section class="- topic/section "><title class="- topic/title ">storeSomethingSelected</title><p class="- topic/p ">storeSomethingSelected(selectLocator, variableName) Generated from isSomethingSelected(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: true if some option has been selected, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeSpeed</title><p class="- topic/p ">storeSpeed(variableName) Generated from getSpeed(). Returns: the execution speed in milliseconds.</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeTable</title><p class="- topic/p ">storeTable(tableCellAddress, variableName) Generated from getTable(tableCellAddress)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*tableCellAddress - a cell address, e.g. "foo.1.4" . Returns: the text from the specified cell</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeText</title><p class="- topic/p ">storeText(locator, variableName) Generated from getText(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: the text of the element</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeTextAndWait</title><p class="- topic/p ">storeTextAndWait(locator, variableName) Generated from getText(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: the text of the element</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeTextPresent</title><p class="- topic/p ">storeTextPresent(pattern, variableName) This command is deprecated. Use the storeText command with an element locator instead. Generated from isTextPresent(pattern)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*pattern - a pattern to match with the text of the page . Returns: true i</p>                    </section><section class="- topic/section "><title class="- topic/title ">storeTitle</title><p class="- topic/p ">storeTitle(variableName) Generated from getTitle(). Returns: the title of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeTitleAndWait</title><p class="- topic/p ">storeTitleAndWait(variableName) Generated from getTitle(). Returns: the title of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeValue</title><p class="- topic/p ">storeValue(locator, variableName) Generated from getValue(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: the element value, or "on/off" for checkbox/radio elements</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeVisible</title><p class="- topic/p ">storeVisible(locator, variableName) Generated from isVisible(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: true if the specified element is visible, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeWhetherThisFrameMatchFrameExpression</title><p class="- topic/p ">storeWhetherThisFrameMatchFrameExpression(currentFrameString, target, variableName) Generated from getWhetherThisFrameMatchFrameExpression(currentFrameString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentFrameString - starting frame *target - new frame (which might be</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeWhetherThisWindowMatchWindowExpression</title> <p class="- topic/p ">storeWhetherThisWindowMatchWindowExpression(currentWindowString, target, variableName) Generated from getWhetherThisWindowMatchWindowExpression(currentWindowString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentWindowString - starting window *target - new window (which</p>                     </section><section class="- topic/section "><title class="- topic/title ">storeXpathCount</title><p class="- topic/p ">storeXpathCount(xpath, variableName) Generated from getXpathCount(xpath)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*xpath - the xpath expression to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the spe</p>                    </section><section class="- topic/section "><title class="- topic/title ">submit</title><p class="- topic/p ">submit(formLocator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *formLocator - an element locator for the form you want to submit</p>                     </section><section class="- topic/section "><title class="- topic/title ">submitAndWait</title><p class="- topic/p ">submitAndWait(formLocator) Generated from submit(formLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*formLocator - an element locator for the form you want to submit</p>                     </section><section class="- topic/section "><title class="- topic/title ">type</title><p class="- topic/p ">type(locator, value)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *value - the value to type</p>                     </section><section class="- topic/section "><title class="- topic/title ">typeAndWait</title><p class="- topic/p ">typeAndWait(locator, value) Generated from type(locator, value)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *value - the value to type</p>                     </section><section class="- topic/section "><title class="- topic/title ">typeKeys</title><p class="- topic/p ">typeKeys(locator, value) This command is deprecated. Use the sendKeys command instead.</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *value - the value to type</p>                     </section><section class="- topic/section "><title class="- topic/title ">typeKeysAndWait</title><p class="- topic/p ">typeKeysAndWait(locator, value) This command is deprecated. Use the sendKeysAndWait command instead. Generated from typeKeys(locator, value)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator *value - the value to type</p>                     </section><section class="- topic/section "><title class="- topic/title ">uncheck</title><p class="- topic/p ">uncheck(locator) <b class="+ topic/ph hi-d/b ">Arguments</b>: *locator - an element locator</p>                     </section><section class="- topic/section "><title class="- topic/title ">uncheckAndWait</title><p class="- topic/p ">uncheckAndWait(locator) Generated from uncheck(locator) Arguments: *locator - an element locator</p>                    </section><section class="- topic/section "><title class="- topic/title ">useXpathLibrary</title><p class="- topic/p ">useXpathLibrary(libraryName) <b class="+ topic/ph hi-d/b ">Arguments</b>: *libraryName - name of the desired library Only the following three can be chosen: "ajaxslt" - Google's library, "javascript-xpath" - Cybozu Labs' faster library, "default" - The defau</p>                    </section><section class="- topic/section "><title class="- topic/title ">useXpathLibraryAndWait</title><p class="- topic/p ">useXpathLibraryAndWait(libraryName) Generated from useXpathLibrary(libraryName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*libraryName - name of the desired library Only the following three can be chosen: "ajaxslt" - Google's library, "javascript-xpath" - Cybozu La</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyAlert</title><p class="- topic/p ">verifyAlert(pattern) Generated from getAlert(). Returns: The message of the most recent JavaScript alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyAlertNotPresent</title><p class="- topic/p ">verifyAlertNotPresent() Generated from isAlertPresent(). Returns: true if there is an alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyAlertPresent</title><p class="- topic/p ">verifyAlertPresent() Generated from isAlertPresent(). Returns: true if there is an alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyAllButtons</title><p class="- topic/p ">verifyAllButtons(pattern) Generated from getAllButtons(). Returns: the IDs of all buttons on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyAllFields</title><p class="- topic/p ">verifyAllFields(pattern) Generated from getAllFields(). Returns: the IDs of all field on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyAllLinks</title><p class="- topic/p ">verifyAllLinks(pattern) Generated from getAllLinks(). Returns: the IDs of all links on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyAllWindowIds</title><p class="- topic/p ">verifyAllWindowIds(pattern) Generated from getAllWindowIds(). Returns: Array of identifiers of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyAllWindowNames</title><p class="- topic/p ">verifyAllWindowNames(pattern) Generated from getAllWindowNames(). Returns: Array of names of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyAllWindowTitles</title><p class="- topic/p ">verifyAllWindowTitles(pattern) Generated from getAllWindowTitles(). Returns: Array of titles of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyAttribute</title><p class="- topic/p ">verifyAttribute(attributeLocator, pattern) Generated from getAttribute(attributeLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeLocator - an element locator followed by an @ sign and then the name of the attribute, e.g. "foo@bar" . Returns: the value of the specified a</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyAttributeFromAllWindows</title><p class="- topic/p ">verifyAttributeFromAllWindows(attributeName, pattern) Generated from getAttributeFromAllWindows(attributeName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeName - name of an attribute on the windows. Returns: the set of values of this attribute from all known windows.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyBodyText</title><p class="- topic/p ">verifyBodyText(pattern) Generated from getBodyText(). Returns: the entire text of the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyChecked</title><p class="- topic/p ">verifyChecked(locator) Generated from isChecked(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to a checkbox or radio button . Returns: true if the checkbox is checked, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyConfirmation</title><p class="- topic/p ">verifyConfirmation(pattern) Generated from getConfirmation(). Returns: the message of the most recent JavaScript confirmation dialog</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyConfirmationNotPresent</title><p class="- topic/p ">verifyConfirmationNotPresent() Generated from isConfirmationPresent(). Returns: true if there is a pending confirmation</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyConfirmationPresent</title><p class="- topic/p ">verifyConfirmationPresent() Generated from isConfirmationPresent(). Returns: true if there is a pending confirmation</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyCookie</title><p class="- topic/p ">verifyCookie(pattern) Generated from getCookie(). Returns: all cookies of the current page under test</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyCookieByName</title><p class="- topic/p ">verifyCookieByName(name, pattern) Generated from getCookieByName(name)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie . Returns: the value of the cookie</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyCookieNotPresent</title><p class="- topic/p ">verifyCookieNotPresent(name) Generated from isCookiePresent(name) Arguments: *name - the name of the cookie . Returns: true if a cookie with the specified name is present, or false otherwise.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyCookiePresent</title><p class="- topic/p ">verifyCookiePresent(name) Generated from isCookiePresent(name)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie . Returns: true if a cookie with the specified name is present, or false otherwise.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyCssCount</title><p class="- topic/p ">verifyCssCount(css, pattern) Generated from getCssCount(css)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*css - the css selector to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the specified css select</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyCursorPosition</title><p class="- topic/p ">verifyCursorPosition(locator, pattern) Generated from getCursorPosition(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an input element or textarea . Returns: the numerical position of the cursor in the field</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyEditable</title><p class="- topic/p ">verifyEditable(locator) Generated from isEditable(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: true if the input element is editable, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyElementHeight</title><p class="- topic/p ">verifyElementHeight(locator, pattern) Generated from getElementHeight(locator) Arguments: *locator - an element locator pointing to an element . Returns: height of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyElementIndex</title><p class="- topic/p ">verifyElementIndex(locator, pattern) Generated from getElementIndex(locator) Arguments: *locator - an element locator pointing to an element . Returns: of relative index of the element to its parent (starting from 0)</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyElementNotPresent</title><p class="- topic/p ">verifyElementNotPresent(locator) Generated from isElementPresent(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: true if the element is not present, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyElementPositionLeft</title><p class="- topic/p ">verifyElementPositionLeft(locator, pattern) Generated from getElementPositionLeft(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself . Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyElementPositionTop</title><p class="- topic/p ">verifyElementPositionTop(locator, pattern) Generated from getElementPositionTop(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself . Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyElementPresent</title><p class="- topic/p ">verifyElementPresent(locator) Generated from isElementPresent(locator) Arguments: *locator - an element locator Returns: true if the element is present, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyElementWidth</title><p class="- topic/p ">verifyElementWidth(locator, pattern) Generated from getElementWidth(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: width of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyEval</title><p class="- topic/p ">verifyEval(script, pattern) Generated from getEval(script)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*script - the JavaScript snippet to run . Returns: the results of evaluating the snippet</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyExpression</title><p class="- topic/p ">verifyExpression(expression, pattern) Generated from getExpression(expression)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*expression - the value to return . Returns: the value passed in</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyHtmlSource</title><p class="- topic/p ">verifyHtmlSource(pattern) Generated from getHtmlSource(). Returns: the entire HTML source</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyLocation</title><p class="- topic/p ">verifyLocation(pattern) Generated from getLocation(). Returns: the absolute URL of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyMouseSpeed</title><p class="- topic/p ">verifyMouseSpeed(pattern) Generated from getMouseSpeed(). Returns: the number of pixels between "mousemove" events during dragAndDrop commands (default=10)</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotAlert</title><p class="- topic/p ">verifyNotAlert(pattern) Generated from getAlert(). Returns: The message of the most recent JavaScript alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotAllButtons</title><p class="- topic/p ">verifyNotAllButtons(pattern) Generated from getAllButtons(). Returns: the IDs of all buttons on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotAllFields</title><p class="- topic/p ">verifyNotAllFields(pattern) Generated from getAllFields(). Returns: the IDs of all field on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotAllLinks</title><p class="- topic/p ">verifyNotAllLinks(pattern) Generated from getAllLinks(). Returns: the IDs of all links on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotAllWindowIds</title><p class="- topic/p ">verifyNotAllWindowIds(pattern) Generated from getAllWindowIds(). Returns: Array of identifiers of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotAllWindowNames</title><p class="- topic/p ">verifyNotAllWindowNames(pattern) Generated from getAllWindowNames(). Returns: Array of names of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotAllWindowTitles</title><p class="- topic/p ">verifyNotAllWindowTitles(pattern) Generated from getAllWindowTitles(). Returns: Array of titles of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotAttribute</title><p class="- topic/p ">verifyNotAttribute(attributeLocator, pattern) Generated from getAttribute(attributeLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeLocator - an element locator followed by an @ sign and then the name of the attribute, e.g. "foo@bar" . Returns: the value of the specifie</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyNotAttributeFromAllWindows</title><p class="- topic/p ">verifyNotAttributeFromAllWindows(attributeName, pattern) Generated from getAttributeFromAllWindows(attributeName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeName - name of an attribute on the windows . Returns: the set of values of this attribute from all known windows.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotBodyText</title><p class="- topic/p ">verifyNotBodyText(pattern) Generated from getBodyText(). Returns: the entire text of the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotChecked</title><p class="- topic/p ">verifyNotChecked(locator) Generated from isChecked(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to a checkbox or radio button . Returns: true if the checkbox is checked, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotConfirmation</title><p class="- topic/p ">verifyNotConfirmation(pattern) Generated from getConfirmation(). Returns: the message of the most recent JavaScript confirmation dialog</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotCookie</title><p class="- topic/p ">verifyNotCookie(pattern) Generated from getCookie(). Returns: all cookies of the current page under test</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotCookieByName</title><p class="- topic/p ">verifyNotCookieByName(name, pattern) Generated from getCookieByName(name)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie . Returns: the value of the cookie</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotCssCount</title><p class="- topic/p ">verifyNotCssCount(css, pattern) Generated from getCssCount(css)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*css - the css selector to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the specified css sel</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyNotCursorPosition</title><p class="- topic/p ">verifyNotCursorPosition(locator, pattern) Generated from getCursorPosition(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an input element or textarea . Returns: the numerical position of the cursor in the field</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotEditable</title><p class="- topic/p ">verifyNotEditable(locator) Generated from isEditable(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: true if the input element is editable, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotElementHeight</title><p class="- topic/p ">verifyNotElementHeight(locator, pattern) Generated from getElementHeight(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: height of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotElementIndex</title><p class="- topic/p ">verifyNotElementIndex(locator, pattern) Generated from getElementIndex(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: of relative index of the element to its parent (starting from 0)</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotElementPositionLeft</title><p class="- topic/p ">verifyNotElementPositionLeft(locator, pattern) Generated from getElementPositionLeft(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself . Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotElementPositionTop</title><p class="- topic/p ">verifyNotElementPositionTop(locator, pattern) Generated from getElementPositionTop(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself . Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotElementWidth</title><p class="- topic/p ">verifyNotElementWidth(locator, pattern) Generated from getElementWidth(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: width of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotEval</title><p class="- topic/p ">verifyNotEval(script, pattern) Generated from getEval(script)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*script - the JavaScript snippet to run . Returns: the results of evaluating the snippet</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotExpression</title><p class="- topic/p ">verifyNotExpression(expression, pattern) Generated from getExpression(expression)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*expression - the value to return . Returns: the value passed in</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotHtmlSource</title><p class="- topic/p ">verifyNotHtmlSource(pattern) Generated from getHtmlSource(). Returns: the entire HTML source</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotLocation</title><p class="- topic/p ">verifyNotLocation(pattern) Generated from getLocation(). Returns: the absolute URL of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotMouseSpeed</title><p class="- topic/p ">verifyNotMouseSpeed(pattern) Generated from getMouseSpeed(). Returns: the number of pixels between "mousemove" events during dragAndDrop commands (default=10)</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotOrdered</title><p class="- topic/p ">verifyNotOrdered(locator1, locator2) Generated from isOrdered(locator1, locator2)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator1 - an element locator pointing to the first element *locator2 - an element locator pointing to the second element . Returns: true if elemen</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyNotPrompt</title><p class="- topic/p ">verifyNotPrompt(pattern) Generated from getPrompt(). Returns: the message of the most recent JavaScript question prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotSelectOptions</title><p class="- topic/p ">verifyNotSelectOptions(selectLocator, pattern) Generated from getSelectOptions(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all option labels in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotSelectedId</title><p class="- topic/p ">verifyNotSelectedId(selectLocator, pattern) Generated from getSelectedId(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option ID in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotSelectedIds</title><p class="- topic/p ">verifyNotSelectedIds(selectLocator, pattern) Generated from getSelectedIds(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option IDs in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotSelectedIndex</title><p class="- topic/p ">verifyNotSelectedIndex(selectLocator, pattern) Generated from getSelectedIndex(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option index in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotSelectedIndexes</title><p class="- topic/p ">verifyNotSelectedIndexes(selectLocator, pattern) Generated from getSelectedIndexes(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option indexes in the specified select</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyNotSelectedLabel</title><p class="- topic/p ">verifyNotSelectedLabel(selectLocator, pattern) Generated from getSelectedLabel(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option label in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotSelectedLabels</title><p class="- topic/p ">verifyNotSelectedLabels(selectLocator, pattern) Generated from getSelectedLabels(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option labels in the specified select dr</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyNotSelectedValue</title><p class="- topic/p ">verifyNotSelectedValue(selectLocator, pattern) Generated from getSelectedValue(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option value in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotSelectedValues</title><p class="- topic/p ">verifyNotSelectedValues(selectLocator, pattern) Generated from getSelectedValues(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option values in the specified select dr</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyNotSomethingSelected</title><p class="- topic/p ">verifyNotSomethingSelected(selectLocator) Generated from isSomethingSelected(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: true if some option has been selected, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotSpeed</title><p class="- topic/p ">verifyNotSpeed(pattern) Generated from getSpeed(). Returns: the execution speed in milliseconds.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotTable</title><p class="- topic/p ">verifyNotTable(tableCellAddress, pattern) Generated from getTable(tableCellAddress)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*tableCellAddress - a cell address, e.g. "foo.1.4" . Returns: the text from the specified cell</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotText</title><p class="- topic/p ">verifyNotText(locator, pattern) Generated from getText(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator . Returns: the text of the element</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotTitle</title><p class="- topic/p ">verifyNotTitle(pattern) Generated from getTitle(). Returns: the title of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotValue</title><p class="- topic/p ">verifyNotValue(locator, pattern) Generated from getValue(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator . Returns: the element value, or "on/off" for checkbox/radio elements</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotVisible</title><p class="- topic/p ">verifyNotVisible(locator) Generated from isVisible(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator . Returns: true if the specified element is visible, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyNotWhetherThisFrameMatchFrameExpression</title> <p class="- topic/p ">verifyNotWhetherThisFrameMatchFrameExpression(currentFrameString, target, pattern) Generated from getWhetherThisFrameMatchFrameExpression(currentFrameString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentFrameString - starting frame *target - new frame (which might be r</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyNotWhetherThisWindowMatchWindowExpression</title> <p class="- topic/p ">verifyNotWhetherThisWindowMatchWindowExpression(currentWindowString, target, pattern) Generated from getWhetherThisWindowMatchWindowExpression(currentWindowString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentWindowString - starting window *target - new window (which m</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyNotXpathCount</title><p class="- topic/p ">verifyNotXpathCount(xpath, pattern) Generated from getXpathCount(xpath)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*xpath - the xpath expression to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the spe</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyOrdered</title><p class="- topic/p ">verifyOrdered(locator1, locator2) Generated from isOrdered(locator1, locator2)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator1 - an element locator pointing to the first element *locator2 - an element locator pointing to the second element . Returns: true if element1</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyPrompt</title><p class="- topic/p ">verifyPrompt(pattern) Generated from getPrompt(). Returns: the message of the most recent JavaScript question prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyPromptNotPresent</title><p class="- topic/p ">verifyPromptNotPresent() Generated from isPromptPresent(). Returns: true if there is a pending prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyPromptPresent</title><p class="- topic/p ">verifyPromptPresent() Generated from isPromptPresent(). Returns: true if there is a pending prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifySelectOptions</title><p class="- topic/p ">verifySelectOptions(selectLocator, pattern) Generated from getSelectOptions(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all option labels in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifySelectedId</title><p class="- topic/p ">verifySelectedId(selectLocator, pattern) Generated from getSelectedId(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option ID in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifySelectedIds</title><p class="- topic/p ">verifySelectedIds(selectLocator, pattern) Generated from getSelectedIds(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option IDs in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifySelectedIndex</title><p class="- topic/p ">verifySelectedIndex(selectLocator, pattern) Generated from getSelectedIndex(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option index in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifySelectedIndexes</title><p class="- topic/p ">verifySelectedIndexes(selectLocator, pattern) Generated from getSelectedIndexes(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option indexes in the specified select dr</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifySelectedLabel</title><p class="- topic/p ">verifySelectedLabel(selectLocator, pattern) Generated from getSelectedLabel(selectLocator) Arguments: *selectLocator - an element locator identifying a drop-down menu . Returns: the selected option label in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifySelectedLabels</title><p class="- topic/p ">verifySelectedLabels(selectLocator, pattern) Generated from getSelectedLabels(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option labels in the specified select drop-</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifySelectedValue</title><p class="- topic/p ">verifySelectedValue(selectLocator, pattern) Generated from getSelectedValue(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option value in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifySelectedValues</title><p class="- topic/p ">verifySelectedValues(selectLocator, pattern) Generated from getSelectedValues(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option values in the specified select drop-</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifySomethingSelected</title><p class="- topic/p ">verifySomethingSelected(selectLocator) Generated from isSomethingSelected(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: true if some option has been selected, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifySpeed</title><p class="- topic/p ">verifySpeed(pattern) Generated from getSpeed(). Returns: the execution speed in milliseconds.</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyTable</title><p class="- topic/p ">verifyTable(tableCellAddress, pattern) Generated from getTable(tableCellAddress)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*tableCellAddress - a cell address, e.g. "foo.1.4" . Returns: the text from the specified cell</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyText</title><p class="- topic/p ">verifyText(locator, pattern) Generated from getText(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: the text of the element</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyTextAndWait</title><p class="- topic/p ">verifyTextAndWait(locator, pattern) Generated from getText(locator) Arguments: *locator - an element locator Returns: the text of the element</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyTextNotPresent</title><p class="- topic/p ">verifyTextNotPresent(pattern) This command is deprecated. Use the verifyNotText command with an element locator instead. Generated from isTextPresent(pattern)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*pattern - a pattern to match with the text of the page . Returns: true if the</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyTextPresent</title><p class="- topic/p ">verifyTextPresent(pattern) This command is deprecated. Use the verifyText command with an element locator instead. Generated from isTextPresent(pattern)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*pattern - a pattern to match with the text of the page . Returns: true if the patter</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyTitle</title><p class="- topic/p "/>                    </section><section class="- topic/section "><title class="- topic/title ">verifyTitleAndWait</title><p class="- topic/p ">verifyTitleAndWait(pattern) Generated from getTitle(). Returns: the title of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyValue</title><p class="- topic/p ">verifyValue(locator, pattern) Generated from getValue(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: the element value, or "on/off" for checkbox/radio elements</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyVisible</title><p class="- topic/p ">verifyVisible(locator) Generated from isVisible(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator Returns: true if the specified element is visible, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">verifyWhetherThisFrameMatchFrameExpression</title><p class="- topic/p ">verifyWhetherThisFrameMatchFrameExpression(currentFrameString, target, pattern) Generated from getWhetherThisFrameMatchFrameExpression(currentFrameString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentFrameString - starting frame *target - new frame (which might be rela</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyWhetherThisWindowMatchWindowExpression</title> <p class="- topic/p ">verifyWhetherThisWindowMatchWindowExpression(currentWindowString, target, pattern) Generated from getWhetherThisWindowMatchWindowExpression(currentWindowString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentWindowString - starting window *target - new window (which migh</p>                    </section><section class="- topic/section "><title class="- topic/title ">verifyXpathCount</title><p class="- topic/p ">verifyXpathCount(xpath, pattern) Generated from getXpathCount(xpath)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*xpath - the xpath expression to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the specif</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForAlert</title><p class="- topic/p ">waitForAlert(pattern) Generated from getAlert(). Returns: The message of the most recent JavaScript alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAlertNotPresent</title><p class="- topic/p ">waitForAlertNotPresent() Generated from isAlertPresent(). Returns: true if there is an alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAlertPresent</title><p class="- topic/p ">waitForAlertPresent() Generated from isAlertPresent(). Returns: true if there is an alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAllButtons</title><p class="- topic/p ">waitForAllButtons(pattern) Generated from getAllButtons(). Returns: the IDs of all buttons on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAllFields</title><p class="- topic/p ">waitForAllFields(pattern) Generated from getAllFields(). Returns: the IDs of all field on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAllLinks</title><p class="- topic/p ">waitForAllLinks(pattern) Generated from getAllLinks(). Returns: the IDs of all links on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAllWindowIds</title><p class="- topic/p ">waitForAllWindowIds(pattern) Generated from getAllWindowIds(). Returns: Array of identifiers of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAllWindowNames</title><p class="- topic/p ">waitForAllWindowNames(pattern) Generated from getAllWindowNames(). Returns: Array of names of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAllWindowTitles</title><p class="- topic/p ">waitForAllWindowTitles(pattern) Generated from getAllWindowTitles(). Returns: Array of titles of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAttribute</title><p class="- topic/p ">waitForAttribute(attributeLocator, pattern) Generated from getAttribute(attributeLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeLocator - an element locator followed by an @ sign and then the name of the attribute, e.g. "foo@bar" . Returns: the value of the specified</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForAttributeFromAllWindows</title><p class="- topic/p ">waitForAttributeFromAllWindows(attributeName, pattern) Generated from getAttributeFromAllWindows(attributeName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeName - name of an attribute on the windows . Returns: the set of values of this attribute from all known windows.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForBodyText</title><p class="- topic/p ">waitForBodyText(pattern) Generated from getBodyText(). Returns: the entire text of the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForChecked</title><p class="- topic/p ">waitForChecked(locator) Generated from isChecked(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to a checkbox or radio button . Returns: true if the checkbox is checked, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForCondition</title><p class="- topic/p ">waitForCondition(script, timeout)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*script - the JavaScript snippet to run *timeout - a timeout in milliseconds, after which this command will return with an error</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForConfirmation</title><p class="- topic/p ">waitForConfirmation(pattern) Generated from getConfirmation(). Returns: the message of the most recent JavaScript confirmation dialog</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForConfirmationNotPresent</title><p class="- topic/p ">waitForConfirmationNotPresent() Generated from isConfirmationPresent(). Returns: true if there is a pending confirmation</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForConfirmationPresent</title><p class="- topic/p ">waitForConfirmationPresent() Generated from isConfirmationPresent(). Returns: true if there is a pending confirmation</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForCookie</title><p class="- topic/p ">waitForCookie(pattern) Generated from getCookie(). Returns: all cookies of the current page under test</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForCookieByName</title><p class="- topic/p ">waitForCookieByName(name, pattern) Generated from getCookieByName(name) Arguments: *name - the name of the cookie . Returns: the value of the cookie</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForCookieNotPresent</title><p class="- topic/p ">waitForCookieNotPresent(name) Generated from isCookiePresent(name) Arguments: *name - the name of the cookie . Returns: true if a cookie with the specified name is present, or false otherwise.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForCookiePresent</title><p class="- topic/p ">waitForCookiePresent(name) Generated from isCookiePresent(name) Arguments: *name - the name of the cookie . Returns: true if a cookie with the specified name is present, or false otherwise.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForCssCount</title><p class="- topic/p ">waitForCssCount(css, pattern) Generated from getCssCount(css) Arguments: *css - the css selector to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. . Returns: the number of nodes that match the specified css selecto</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForCursorPosition</title><p class="- topic/p ">waitForCursorPosition(locator, pattern) Generated from getCursorPosition(locator) Arguments: *locator - an element locator pointing to an input element or textarea . Returns: the numerical position of the cursor in the field</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForEditable</title><p class="- topic/p ">waitForEditable(locator) Generated from isEditable(locator) Arguments: *locator - an element locator . Returns: true if the input element is editable, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForElementHeight</title><p class="- topic/p ">waitForElementHeight(locator, pattern) Generated from getElementHeight(locator) Arguments: *locator - an element locator pointing to an element . Returns: height of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForElementIndex</title><p class="- topic/p ">waitForElementIndex(locator, pattern) Generated from getElementIndex(locator) Arguments: *locator - an element locator pointing to an element . Returns: of relative index of the element to its parent (starting from 0)</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForElementNotPresent</title><p class="- topic/p ">waitForElementNotPresent(locator) Generated from isElementPresent(locator) Arguments: *locator - an element locator . Returns: true if the element is not present, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForElementPositionLeft</title><p class="- topic/p ">waitForElementPositionLeft(locator, pattern) Generated from getElementPositionLeft(locator) Arguments: *locator - an element locator pointing to an element OR an element itself . Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForElementPositionTop</title><p class="- topic/p ">waitForElementPositionTop(locator, pattern) Generated from getElementPositionTop(locator) Arguments: *locator - an element locator pointing to an element OR an element itself . Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForElementPresent</title><p class="- topic/p ">waitForElementPresent(locator) Generated from isElementPresent(locator) Arguments: *locator - an element locator . Returns: true if the element is present, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForElementWidth</title><p class="- topic/p ">waitForElementWidth(locator, pattern) Generated from getElementWidth(locator) Arguments: *locator - an element locator pointing to an element . Returns: width of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForEval</title><p class="- topic/p ">waitForEval(script, pattern) Generated from getEval(script)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*script - the JavaScript snippet to run . Returns: the results of evaluating the snippet</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForExpression</title><p class="- topic/p ">waitForExpression(expression, pattern) Generated from getExpression(expression) Arguments: *expression - the value to return . Returns: the value passed in</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForFrameToLoad</title><p class="- topic/p ">waitForFrameToLoad(frameAddress, timeout)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*frameAddress - FrameAddress from the server side *timeout - a timeout in milliseconds, after which this command will return with an error</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForHtmlSource</title><p class="- topic/p ">waitForHtmlSource(pattern) Generated from getHtmlSource(). Returns: the entire HTML source</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForLocation</title><p class="- topic/p ">waitForLocation(pattern) Generated from getLocation(). Returns: the absolute URL of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForMouseSpeed</title><p class="- topic/p ">waitForMouseSpeed(pattern) Generated from getMouseSpeed(). Returns: the number of pixels between "mousemove" events during dragAndDrop commands (default=10)</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotAlert</title><p class="- topic/p ">waitForNotAlert(pattern) Generated from getAlert(). Returns: The message of the most recent JavaScript alert</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotAllButtons</title><p class="- topic/p ">waitForNotAllButtons(pattern) Generated from getAllButtons(). Returns: the IDs of all buttons on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotAllFields</title><p class="- topic/p ">waitForNotAllFields(pattern) Generated from getAllFields(). Returns: the IDs of all field on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotAllLinks</title><p class="- topic/p ">waitForNotAllLinks(pattern) Generated from getAllLinks(). Returns: the IDs of all links on the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotAllWindowIds</title><p class="- topic/p ">waitForNotAllWindowIds(pattern) Generated from getAllWindowIds(). Returns: Array of identifiers of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotAllWindowNames</title><p class="- topic/p ">waitForNotAllWindowNames(pattern) Generated from getAllWindowNames(). Returns: Array of names of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotAllWindowTitles</title><p class="- topic/p ">waitForNotAllWindowTitles(pattern) Generated from getAllWindowTitles(). Returns: Array of titles of all windows that the browser knows about.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotAttribute</title><p class="- topic/p ">waitForNotAttribute(attributeLocator, pattern) Generated from getAttribute(attributeLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeLocator - an element locator followed by an @ sign and then the name of the attribute, e.g. "foo@bar" . Returns: the value of the specifi</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForNotAttributeFromAllWindows</title><p class="- topic/p ">waitForNotAttributeFromAllWindows(attributeName, pattern) Generated from getAttributeFromAllWindows(attributeName)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*attributeName - name of an attribute on the windows . Returns: the set of values of this attribute from all known windows.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotBodyText</title><p class="- topic/p ">waitForNotBodyText(pattern) Generated from getBodyText(). Returns: the entire text of the page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotChecked</title><p class="- topic/p ">waitForNotChecked(locator) Generated from isChecked(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to a checkbox or radio button . Returns: true if the checkbox is checked, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotConfirmation</title><p class="- topic/p ">waitForNotConfirmation(pattern) Generated from getConfirmation(). Returns: the message of the most recent JavaScript confirmation dialog</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotCookie</title><p class="- topic/p ">waitForNotCookie(pattern) Generated from getCookie(). Returns: all cookies of the current page under test</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotCookieByName</title><p class="- topic/p ">waitForNotCookieByName(name, pattern) Generated from getCookieByName(name)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*name - the name of the cookie . Returns: the value of the cookie</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotCssCount</title><p class="- topic/p ">waitForNotCssCount(css, pattern) Generated from getCssCount(css)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*css - the css selector to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the specified css se</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForNotCursorPosition</title><p class="- topic/p ">waitForNotCursorPosition(locator, pattern) Generated from getCursorPosition(locator) Arguments: *locator - an element locator pointing to an input element or textarea. Returns: the numerical position of the cursor in the field</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotEditable</title><p class="- topic/p ">waitForNotEditable(locator) Generated from isEditable(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: true if the input element is editable, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotElementHeight</title><p class="- topic/p ">waitForNotElementHeight(locator, pattern) Generated from getElementHeight(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: height of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotElementIndex</title><p class="- topic/p ">waitForNotElementIndex(locator, pattern) Generated from getElementIndex(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element . Returns: of relative index of the element to its parent (starting from 0)</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotElementPositionLeft</title><p class="- topic/p ">waitForNotElementPositionLeft(locator, pattern) Generated from getElementPositionLeft(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself. Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotElementPositionTop</title><p class="- topic/p ">waitForNotElementPositionTop(locator, pattern) Generated from getElementPositionTop(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element OR an element itself. Returns: of pixels from the edge of the frame.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotElementWidth</title><p class="- topic/p ">waitForNotElementWidth(locator, pattern) Generated from getElementWidth(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator pointing to an element. Returns: width of an element in pixels</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotEval</title><p class="- topic/p ">waitForNotEval(script, pattern) Generated from getEval(script)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*script - the JavaScript snippet to run. Returns: the results of evaluating the snippet</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotExpression</title><p class="- topic/p ">waitForNotExpression(expression, pattern) Generated from getExpression(expression)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*expression - the value to return. Returns: the value passed in</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotHtmlSource</title><p class="- topic/p ">waitForNotHtmlSource(pattern) Generated from getHtmlSource(). Returns: the entire HTML source</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotLocation</title><p class="- topic/p ">waitForNotLocation(pattern) Generated from getLocation(). Returns: the absolute URL of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotMouseSpeed</title><p class="- topic/p ">waitForNotMouseSpeed(pattern) Generated from getMouseSpeed(). Returns: the number of pixels between "mousemove" events during dragAndDrop commands (default=10)</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotOrdered</title><p class="- topic/p ">waitForNotOrdered(locator1, locator2) Generated from isOrdered(locator1, locator2)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator1 - an element locator pointing to the first element *locator2 - an element locator pointing to the second element. Returns: true if element1 is the</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForNotPrompt</title><p class="- topic/p ">waitForNotPrompt(pattern) Generated from getPrompt(). Returns: the message of the most recent JavaScript question prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotSelectOptions</title><p class="- topic/p ">waitForNotSelectOptions(selectLocator, pattern) Generated from getSelectOptions(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all option labels in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotSelectedId</title><p class="- topic/p ">waitForNotSelectedId(selectLocator, pattern) Generated from getSelectedId(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: the selected option ID in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotSelectedIds</title><p class="- topic/p ">waitForNotSelectedIds(selectLocator, pattern) Generated from getSelectedIds(selectLocator) Arguments: *selectLocator - an element locator identifying a drop-down menu. Returns: an array of all selected option IDs in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotSelectedIndex</title><p class="- topic/p ">waitForNotSelectedIndex(selectLocator, pattern) Generated from getSelectedIndex(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: the selected option index in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotSelectedIndexes</title><p class="- topic/p ">waitForNotSelectedIndexes(selectLocator, pattern) Generated from getSelectedIndexes(selectLocator) Arguments: *selectLocator - an element locator identifying a drop-down menu. Returns: an array of all selected option indexes in the specified select drop</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForNotSelectedLabel</title><p class="- topic/p ">waitForNotSelectedLabel(selectLocator, pattern) Generated from getSelectedLabel(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: the selected option label in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotSelectedLabels</title><p class="- topic/p ">waitForNotSelectedLabels(selectLocator, pattern) Generated from getSelectedLabels(selectLocator) Arguments: *selectLocator - an element locator identifying a drop-down menu. Returns: an array of all selected option labels in the specified select drop-d</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForNotSelectedValue</title><p class="- topic/p ">waitForNotSelectedValue(selectLocator, pattern) Generated from getSelectedValue(selectLocator) Arguments: *selectLocator - an element locator identifying a drop-down menu. Returns: the selected option value in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotSelectedValues</title><p class="- topic/p ">waitForNotSelectedValues(selectLocator, pattern) Generated from getSelectedValues(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: an array of all selected option values in the specified select drop-</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForNotSomethingSelected</title><p class="- topic/p ">waitForNotSomethingSelected(selectLocator) Generated from isSomethingSelected(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: true if some option has been selected, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotSpeed</title><p class="- topic/p ">waitForNotSpeed(pattern) Generated from getSpeed(). Returns: the execution speed in milliseconds.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotTable</title><p class="- topic/p ">waitForNotTable(tableCellAddress, pattern) Generated from getTable(tableCellAddress)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*tableCellAddress - a cell address, e.g. "foo.1.4" . Returns: the text from the specified cell</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotText</title><p class="- topic/p ">waitForNotText(locator, pattern) Generated from getText(locator) Arguments: *locator - an element locator. Returns: the text of the element</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotTitle</title><p class="- topic/p ">waitForNotTitle(pattern) Generated from getTitle(). Returns: the title of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotValue</title><p class="- topic/p ">waitForNotValue(locator, pattern) Generated from getValue(locator) Arguments: *locator - an element locator. Returns: the element value, or "on/off" for checkbox/radio elements</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotVisible</title><p class="- topic/p ">waitForNotVisible(locator) Generated from isVisible(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: true if the specified element is visible, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotWhetherThisFrameMatchFrameExpression</title> <p class="- topic/p ">waitForNotWhetherThisFrameMatchFrameExpression(currentFrameString, target, pattern) Generated from getWhetherThisFrameMatchFrameExpression(currentFrameString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentFrameString - starting frame *target - new frame (which might be</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotWhetherThisWindowMatchWindowExpression</title> <p class="- topic/p ">waitForNotWhetherThisWindowMatchWindowExpression(currentWindowString, target, pattern) Generated from getWhetherThisWindowMatchWindowExpression(currentWindowString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentWindowString - starting window *target - new window (which</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForNotXpathCount</title><p class="- topic/p ">waitForNotXpathCount(xpath, pattern) Generated from getXpathCount(xpath)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*xpath - the xpath expression to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the sp</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForOrdered</title><p class="- topic/p ">waitForOrdered(locator1, locator2) Generated from isOrdered(locator1, locator2)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator1 - an element locator pointing to the first element *locator2 - an element locator pointing to the second element . Returns: true if element1 is the p</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForPageToLoad</title><p class="- topic/p ">waitForPageToLoad(timeout) <b class="+ topic/ph hi-d/b ">Arguments</b>: *timeout - a timeout in milliseconds, after which this command will return with an error</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForPopUp</title><p class="- topic/p ">waitForPopUp(windowID, timeout) <b class="+ topic/ph hi-d/b ">Arguments</b>: *windowID - the JavaScript window "name" of the window that will appear (not the text of the title bar) If unspecified, or specified as "null", this command will wait for the first non-top window to appear (don</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForPrompt</title><p class="- topic/p ">waitForPrompt(pattern) Generated from getPrompt(). Returns: the message of the most recent JavaScript question prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForPromptNotPresent</title><p class="- topic/p ">waitForPromptNotPresent() Generated from isPromptPresent(). Returns: true if there is a pending prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForPromptPresent</title><p class="- topic/p ">waitForPromptPresent() Generated from isPromptPresent(). Returns: true if there is a pending prompt</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForSelectOptions</title><p class="- topic/p ">waitForSelectOptions(selectLocator, pattern) Generated from getSelectOptions(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all option labels in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForSelectedId</title><p class="- topic/p ">waitForSelectedId(selectLocator, pattern) Generated from getSelectedId(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: the selected option ID in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForSelectedIds</title><p class="- topic/p ">waitForSelectedIds(selectLocator, pattern) Generated from getSelectedIds(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu. Returns: an array of all selected option IDs in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForSelectedIndex</title><p class="- topic/p ">waitForSelectedIndex(selectLocator, pattern) Generated from getSelectedIndex(selectLocator) Arguments: *selectLocator - an element locator identifying a drop-down menu. Returns: the selected option index in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForSelectedIndexes</title><p class="- topic/p ">waitForSelectedIndexes(selectLocator, pattern) Generated from getSelectedIndexes(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option indexes in the specified select drop</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForSelectedLabel</title><p class="- topic/p ">waitForSelectedLabel(selectLocator, pattern) Generated from getSelectedLabel(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option label in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForSelectedLabels</title><p class="- topic/p ">waitForSelectedLabels(selectLocator, pattern) Generated from getSelectedLabels(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option labels in the specified select drop-do</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForSelectedValue</title><p class="- topic/p ">waitForSelectedValue(selectLocator, pattern) Generated from getSelectedValue(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: the selected option value in the specified select drop-down</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForSelectedValues</title><p class="- topic/p ">waitForSelectedValues(selectLocator, pattern) Generated from getSelectedValues(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: an array of all selected option values in the specified select drop-do</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForSomethingSelected</title><p class="- topic/p ">waitForSomethingSelected(selectLocator) Generated from isSomethingSelected(selectLocator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*selectLocator - an element locator identifying a drop-down menu . Returns: true if some option has been selected, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForSpeed</title><p class="- topic/p ">waitForSpeed(pattern) Generated from getSpeed(). Returns: the execution speed in milliseconds.</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForTable</title><p class="- topic/p ">waitForTable(tableCellAddress, pattern) Generated from getTable(tableCellAddress)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*tableCellAddress - a cell address, e.g. "foo.1.4" . Returns: the text from the specified cell</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForText</title><p class="- topic/p ">waitForText(locator, pattern) Generated from getText(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: the text of the element</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForTextNotPresent</title><p class="- topic/p ">waitForTextNotPresent(pattern) This command is deprecated. Use the waitForNotText command with an element locator instead. Generated from isTextPresent(pattern)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*pattern - a pattern to match with the text of the page . Returns: true if the</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForTextPresent</title><p class="- topic/p ">waitForTextPresent(pattern) This command is deprecated. Use the waitForText command with an element locator instead. Generated from isTextPresent(pattern)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*pattern - a pattern to match with the text of the page . Returns: true if the patter</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForTitle</title><p class="- topic/p ">waitForTitle(pattern) Generated from getTitle(). Returns: the title of the current page</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForValue</title><p class="- topic/p ">waitForValue(locator, pattern) Generated from getValue(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: the element value, or "on/off" for checkbox/radio elements</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForVisible</title><p class="- topic/p ">waitForVisible(locator) Generated from isVisible(locator)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*locator - an element locator. Returns: true if the specified element is visible, false otherwise</p>                     </section><section class="- topic/section "><title class="- topic/title ">waitForWhetherThisFrameMatchFrameExpression</title><p class="- topic/p ">waitForWhetherThisFrameMatchFrameExpression(currentFrameString, target, pattern) Generated from getWhetherThisFrameMatchFrameExpression(currentFrameString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentFrameString - starting frame *target - new frame (which might be rel</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForWhetherThisWindowMatchWindowExpression</title> <p class="- topic/p ">waitForWhetherThisWindowMatchWindowExpression(currentWindowString, target, pattern) Generated from getWhetherThisWindowMatchWindowExpression(currentWindowString, target)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*currentWindowString - starting window *target - new window (which mig</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitForXpathCount</title><p class="- topic/p ">waitForXpathCount(xpath, pattern) Generated from getXpathCount(xpath)</p> <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Arguments</b>:</p> <p class="- topic/p ">*xpath - the xpath expression to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you. Returns: the number of nodes that match the speci</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitPreparation</title><p class="- topic/p ">waitPreparation</p>                    </section><section class="- topic/section "><title class="- topic/title ">waitPreparationAndWait</title><p class="- topic/p ">waitPreparationAndWait</p>                    </section><section class="- topic/section "><title class="- topic/title ">windowFocus</title><p class="- topic/p ">windowFocus()</p>                    </section><section class="- topic/section "><title class="- topic/title ">windowFocusAndWait</title><p class="- topic/p ">windowFocusAndWait() Generated from windowFocus()</p>                    </section><section class="- topic/section "><title class="- topic/title ">windowMaximize</title><p class="- topic/p ">windowMaximize()</p>                    </section><section class="- topic/section "><title class="- topic/title ">windowMaximizeAndWait</title><p class="- topic/p ">windowMaximizeAndWait() Generated from windowMaximize()</p>                    </section></conbody></concept>