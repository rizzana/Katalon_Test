<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id_0" class="- topic/topic concept/concept "><title class="- topic/title ">[Mobile] Take Area Screenshot As Checkpoint</title><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">
            <note type="note" class="- topic/note ">
                    <ul class="- topic/ul "><li class="- topic/li ">
                            <p class="- topic/p ">From version <b class="+ topic/ph hi-d/b ">7.9.0</b>, this keyword is available.</p>
                        </li></ul>
            </note>
        </p><section id="id_1" class="- topic/section ">
            <title class="- topic/title ">takeAreaScreenshotAsCheckpoint</title>
            <ul class="- topic/ul "><li class="- topic/li "> <b class="+ topic/ph hi-d/b ">Description</b>: Take a screenshot of a specific area to send to TestOps Vision. The area should be inside the application viewport; otherwise, this keyword will fail.</li><li class="- topic/li "> <b class="+ topic/ph hi-d/b ">Keyword name</b>: takeAreaScreenshotAsCheckpoint</li><li class="- topic/li "> <b class="+ topic/ph hi-d/b ">Keyword syntax</b>: <codeblock class="+ topic/pre pr-d/codeblock ">Mobile.takeAreaScreenshotAsCheckpoint(String checkpointName, Rectangle rect,List&lt;TestObject&gt; ignoredElements, Color hidingColor, FailureHandling flowControl)</codeblock>
                </li><li class="- topic/li ">
                    <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Parameters</b>:</p>
                    <ul class="- topic/ul "><li class="- topic/li ">
                            <p class="- topic/p ">Name: checkpointName</p>
                            <ul class="- topic/ul "><li class="- topic/li ">Description: A String representing the name of the image on TestOps Vision. This name will be used to detect which baseline this checkpoint is compared with. This name will be appended with the TestOps Vision prefix ('keyes-') on a local machine.</li><li class="- topic/li ">Parameter Type: String</li><li class="- topic/li ">Mandatory: Required</li></ul>
                        </li><li class="- topic/li ">
                            <p class="- topic/p ">Name: rect</p>
                            <ul class="- topic/ul "><li class="- topic/li ">Description: A rectangle definding the position and size of the area to be captured.</li><li class="- topic/li ">Parameter Type: Rectangle</li><li class="- topic/li ">Mandatory: Required</li></ul>
                        </li><li class="- topic/li ">
                            <p class="- topic/p ">Name: ignoredElements</p>
                            <ul class="- topic/ul "><li class="- topic/li ">Description: List of the ignored elements. These elements will be hidden by drawing an overlap color layer. If the test engine failed to hide the element by any problems, this keyword would continue without impacting the result.</li><li class="- topic/li ">Parameter Type: List </li><li class="- topic/li ">Mandatory: Optional</li></ul>
                        </li><li class="- topic/li ">
                            <p class="- topic/p ">Name: hidingColor</p>
                            <ul class="- topic/ul "><li class="- topic/li ">Description: The color used to draw the overlap layer. If not defined, Color.GRAY is used.</li><li class="- topic/li ">Parameter Type: Color</li><li class="- topic/li ">Mandatory: Optional</li></ul>
                        </li><li class="- topic/li ">
                            <p class="- topic/p ">Name: flowControl</p>
                            <ul class="- topic/ul "><li class="- topic/li ">Description: Specify <xref href="../../../../../Maintain/failure-handling/failure-handling.dita" class="- topic/xref ">failure handling</xref> schema to determine whether the execution should be allowed to continue or stop.</li><li class="- topic/li ">STOP<i class="+ topic/ph hi-d/i ">ON</i>FAILURE: throws a StepFailedException if the step failed (default).</li><li class="- topic/li ">CONTINUE<i class="+ topic/ph hi-d/i ">ON</i>FAILURE: continues the test if the test failed, but the test result is still Failed.</li><li class="- topic/li ">OPTIONAL: continues the test and ignores the test result.</li><li class="- topic/li ">Parameter Type: FailureHandling</li><li class="- topic/li ">Mandatory: Optional</li></ul>
                        </li></ul>
                </li><li class="- topic/li ">
                    <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Return</b>: a String representing the path to the captured image.</p>
                </li><li class="- topic/li ">
                    <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Throw</b>: StepFailedException if the defined rectangle is outside the application viewport or Katalon Studio can't store the image in the disk.</p>
                </li><li class="- topic/li ">
                    <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Example</b>:</p><p class="- topic/p "><codeblock class="+ topic/pre pr-d/codeblock ">// add import libs first
import org.openqa.selenium.Rectangle as Rectangle
// take sreenshot of an area start at (x: 0 , y: 0) with size (height: 1500, width: 1000)
Mobile.takeAreaScreenshotAsCheckpoint('screenshot_area', new Rectangle(0, 0, 1500, 1000), [findTestObject('hide_element_1'), findTestObject('hide_element_2')], Color.BLUE)
</codeblock></p>
                </li></ul>
            
        </section></conbody></concept>