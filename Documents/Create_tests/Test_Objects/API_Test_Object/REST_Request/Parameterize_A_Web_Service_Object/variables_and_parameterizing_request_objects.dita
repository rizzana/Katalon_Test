<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id_2" class="- topic/topic concept/concept "><title class="- topic/title ">Variables and Parameterizing Request Objects</title><conbody class="- topic/body  concept/conbody "><note type="note" class="- topic/note ">
            <ul class="- topic/ul "><li class="- topic/li ">Available for both <b class="+ topic/ph hi-d/b ">RESTful</b> and <b class="+ topic/ph hi-d/b ">SOAP</b> Web Service requests</li></ul>
        </note><p class="- topic/p ">Katalon Studio provides the <b class="+ topic/ph hi-d/b ">Variables</b> section with both manual and scripting editors. By using variables in a request object, you can handle the dynamic values of an object's properties and have more control over them. You can add a new variable and declare its properties in the <b class="+ topic/ph hi-d/b ">Variables</b> tab. To call a variable in a Web Service object, use the <b class="+ topic/ph hi-d/b ">${variable_name}</b> syntax as a place holder in any of the supported locations. The values of the pre-defined variables are passed to their place holders, respectively, during runtime. It is called parameterization, and the approach is the same as <xref href="../../../Web_Test_Objects/manage-web-test-object/manage-web-test-object.dita" class="- topic/xref ">parameterizing a WebUI object</xref>.</p><p class="- topic/p ">In the manual view of a test case, when you add a request object, the pre-defined variables are added <b class="+ topic/ph hi-d/b ">automatically</b>; hence, you don't need to define them again.</p></conbody></concept>