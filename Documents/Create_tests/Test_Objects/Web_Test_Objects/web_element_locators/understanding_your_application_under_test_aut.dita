<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id_1" class="- topic/topic concept/concept "><title class="- topic/title ">Understanding Your Application Under Test (AUT)</title><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">This step contributes up to 80% of your success in choosing an
         excellent approach to UI functional automation testing. Before
         performing any automation testing, your team has to answer these
         questions:</p><ul class="- topic/ul "><li class="- topic/li ">Which web technologies are in use?</li><li class="- topic/li ">Which conventions are applied by the development team?</li></ul><p class="- topic/p ">The answers to these questions will help you decide which
         locator value is static or dynamic. Take ID, for example. ID is
         generally suggested as the best locator in Web UI testing because
         it is simple and unique on a web page. However, there is a problem
         if it is generated dynamically at runtime. Different Web
         technologies have different default settings when rendering
         elements on a web page. For example, ExtJs or Angular frameworks
         regularly create dynamic element IDs by default. Therefore, if your
         AUT is developed using these technologies, you can expect that IDs
         are dynamic and that they should not be used as the main selectors.
         In this case, you should use Class, Name, or Text properties
         instead.</p><p class="- topic/p ">The development team's conventions should also be taken into
         account. If the team has the conventions of using all elements with
         static IDs, static names, for example, then these static properties
         can be used as primary locators. Furthermore, it is unnecessary to
         locate an element by its static locator if it has parents,
         children, or siblings that can be located by static locators. You
         instead locate the element using XPath functions. For example:</p><p class="- topic/p ">
        <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/tutorials/web_element_locators/Username.png" scope="external" class="- topic/image "><alt class="- topic/alt ">Username</alt></image>
      </p><codeblock class="+ topic/pre pr-d/codeblock ">&lt;div class="field-group"&gt;
&lt;label accesskey="u" for="tl0156"&gt;Username&lt;/label&gt;
&lt;input class="text medium-field" id="tl0156" type="text"&gt;
&lt;/div&gt;
</codeblock><ul class="- topic/ul "><li class="- topic/li ">Locate the <codeph class="+ topic/ph pr-d/codeph "> 
            
            //label[.='Username']//ancestor::div[1]</codeph></li><li class="- topic/li ">Locate the  
            
            <codeph class="+ topic/ph pr-d/codeph ">//label[.='Username']/following-sibling::input</codeph>
        </li></ul></conbody></concept>