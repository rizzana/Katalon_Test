<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task-5120" class="- topic/topic task/task "><title class="- topic/title ">Create a custom keyword</title><taskbody class="- topic/body task/taskbody "><context class="- topic/section task/context ">To create a custom keyword, do as follows:</context><steps class="- topic/ol task/steps "><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">From the main menu, select <menucascade class="+ topic/ph ui-d/menucascade "><uicontrol class="+ topic/ph ui-d/uicontrol ">File</uicontrol><uicontrol class="+ topic/ph ui-d/uicontrol ">New</uicontrol><uicontrol class="+ topic/ph ui-d/uicontrol ">Keyword</uicontrol></menucascade>.</cmd><info class="- topic/itemgroup task/info "><image href="image/ks-855-new-kw.png" width="500" class="- topic/image "><alt class="- topic/alt ">Select New keyword file from the main menu</alt></image></info><stepresult class="- topic/itemgroup task/stepresult ">The <uicontrol class="+ topic/ph ui-d/uicontrol ">New Keyword</uicontrol> dialog is displayed. <p class="- topic/p "><image href="image/ks-new-keyword.png" width="500" class="- topic/image "><alt class="- topic/alt ">The New keyword dialog appears</alt></image></p></stepresult></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Enter a class name and specify a package for the keyword. Click <uicontrol class="+ topic/ph ui-d/uicontrol ">OK</uicontrol>.</cmd><info class="- topic/itemgroup task/info ">By default, a class name cannot start with a number, contain spaces, or have special characters. You can follow the Java naming convention: start with a lowercase letter, then capitalize the first letter of every following word (for example, <userinput class="+ topic/ph sw-d/userinput ">newCustomKeyword</userinput>).</info><info class="- topic/itemgroup task/info "><note type="note" class="- topic/note "><ul class="- topic/ul "><li class="- topic/li "><p class="- topic/p ">You can generate sample custom keywords for Web, Mobile, and API Testing. Refer to <xref href="../Sample_Custom_Keywords/sample-custom-keywords.dita" class="- topic/xref "/>.</p></li></ul></note></info><stepresult class="- topic/itemgroup task/stepresult "><p class="- topic/p ">A new custom keyword is created under the specified <uicontrol class="+ topic/ph ui-d/uicontrol ">package</uicontrol>.<image href="image/ks-new-ckw.png" width="400" class="- topic/image "><alt class="- topic/alt ">The new custom keyword in the Tests Explorer sidebar</alt></image></p></stepresult></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Enter the following code snippet in your class to define a custom keyword:</cmd><info class="- topic/itemgroup task/info "><codeblock class="+ topic/pre pr-d/codeblock ">@Keyword (keywordObject = "&lt;category_name&gt;")
def keywordName(parametersâ€¦) {
// enter your code here
// you can use either Groovy or Java
}</codeblock><table class="- topic/table "><tgroup cols="3" class="- topic/tgroup "><colspec colname="c1" colnum="1" class="- topic/colspec "/><colspec colname="c2" colnum="2" class="- topic/colspec "/><colspec colname="c3" colnum="3" class="- topic/colspec "/><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Item</entry><entry class="- topic/entry ">Description</entry><entry class="- topic/entry ">Required</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">@Keyword</codeph></entry><entry class="- topic/entry ">The annotation to indicate that the block of code below is the definition of a keyword.</entry><entry class="- topic/entry ">Yes</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keywordObject</codeph></entry><entry class="- topic/entry ">The category of your custom keyword (available from version 7.5.5).</entry><entry class="- topic/entry ">No</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keywordName</codeph></entry><entry class="- topic/entry ">The name for your custom keyword.</entry><entry class="- topic/entry ">Yes</entry></row><row class="- topic/row "><entry class="- topic/entry ">parameters</entry><entry class="- topic/entry ">The list of parameters to be used in the custom keyword.</entry><entry class="- topic/entry ">No</entry></row></tbody></tgroup></table>For example:<p class="- topic/p "><image href="image/ks-ckw-example.png" width="500" class="- topic/image "><alt class="- topic/alt ">An example of custom keyword definition</alt></image></p></info><info class="- topic/itemgroup task/info "><p class="- topic/p ">From version 7.5.5 and later, <uicontrol class="+ topic/ph ui-d/uicontrol ">Custom Keywords</uicontrol> in <uicontrol class="+ topic/ph ui-d/uicontrol ">Keywords Browser</uicontrol> are put in alphabetical order, and you can categorize them. The category name should be declared via <codeph class="+ topic/ph pr-d/codeph ">keywordObject</codeph> with the same mechanism as the built-in keywords. </p><p class="- topic/p ">The sample below describes a keyword with the "Browser" category:<codeblock class="+ topic/pre pr-d/codeblock ">@Keyword(keywordObject = "Browser")
def refreshBrowser() {
}</codeblock>In the <uicontrol class="+ topic/ph ui-d/uicontrol ">Keywords Browser</uicontrol>:</p><p class="- topic/p "><image href="image/ks-keyword-browser.png" width="400" class="- topic/image "><alt class="- topic/alt ">Custom keyword in Keywords Brower view</alt></image></p></info></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd "> When you are done, save the keyword file.</cmd></step></steps></taskbody></task>