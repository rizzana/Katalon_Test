<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task-7534" class="- topic/topic task/task "><title class="- topic/title ">Upload test scripts from a Git repository</title><taskbody class="- topic/body task/taskbody "><prereq class="- topic/section task/prereq "><ul class="- topic/ul "><li class="- topic/li "><p class="- topic/p ">You have an existing test project in Azure Repos / Bitbucket / GitHub / GitLab / AWS CodeCommit.</p></li></ul></prereq><context class="- topic/section task/context ">To upload test scripts from a Git repository to <ph conkeyref="name-variables/katalon-testops" class="- topic/ph "/>, do as follows:</context><steps class="- topic/ol task/steps "><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Sign in <xref format="html" href="https://testops.katalon.io/login" scope="external" class="- topic/xref "><ph conkeyref="name-variables/katalon-testops" class="- topic/ph "/></xref> and go to the project you want to upload the test scripts to.</cmd></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Go to <uicontrol class="+ topic/ph ui-d/uicontrol ">Configurations</uicontrol> &gt; <uicontrol class="+ topic/ph ui-d/uicontrol ">Script Repositories</uicontrol> &gt; <uicontrol class="+ topic/ph ui-d/uicontrol ">Connect Git Repository</uicontrol>. Click <uicontrol class="+ topic/ph ui-d/uicontrol ">Create a new Git repository</uicontrol>.</cmd><info class="- topic/itemgroup task/info "><image href="image/TO-Configurations-create_a_git_repo.png" class="- topic/image "><alt class="- topic/alt ">create a new Git repository</alt></image></info><stepresult class="- topic/itemgroup task/stepresult ">The <uicontrol class="+ topic/ph ui-d/uicontrol ">Create a new Git repository</uicontrol> tab appears.<image href="image/TO-Configurations-Create_a_new_git_repo_tab.png" class="- topic/image "><alt class="- topic/alt ">Create a new Git repository tab appears</alt></image></stepresult></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In the <uicontrol class="+ topic/ph ui-d/uicontrol ">Source Type</uicontrol> dropdown list, choose one of the following source types:</cmd><info class="- topic/itemgroup task/info "><ul class="- topic/ul "><li class="- topic/li ">Azure Repos</li><li class="- topic/li ">Bitbucket</li><li class="- topic/li ">GitHub</li><li class="- topic/li ">GitLab</li><li class="- topic/li ">AWS CodeCommit. When you select the <uicontrol class="+ topic/ph ui-d/uicontrol ">AWS CodeCommit</uicontrol> option, the <uicontrol class="+ topic/ph ui-d/uicontrol ">Access Key ID</uicontrol> and <uicontrol class="+ topic/ph ui-d/uicontrol ">Secret Access Key</uicontrol> fields are enabled. Currently, Katalon Studio does not support AWS CodeCommit yet.</li></ul></info></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In the <uicontrol class="+ topic/ph ui-d/uicontrol ">Repository URL</uicontrol> field, enter the URL of your Git script repository. If you choose <uicontrol class="+ topic/ph ui-d/uicontrol ">AWS CodeCommit</uicontrol>, you can refer to this AWS document to retrieve the repository URL: <xref href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html#setting-up-gc-connect-console" scope="external" class="- topic/xref ">Step 4: Connect to the CodeCommit console and clone the repository</xref>.</cmd></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In the <uicontrol class="+ topic/ph ui-d/uicontrol ">Username</uicontrol> field, enter your Azure Repos / Bitbucket / GitHub / GitLab / AWS CodeCommit username.</cmd></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In the <uicontrol class="+ topic/ph ui-d/uicontrol ">Personal Access Token</uicontrol> field, enter your personal access token (PAT). To create a PAT, you can refer to the following documents:</cmd><info class="- topic/itemgroup task/info "><ul class="- topic/ul "><li class="- topic/li ">For Azure Repos, see this Microsoft document: <xref href="https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops&amp;tabs=Windows" scope="external" class="- topic/xref ">Use personal access tokens</xref>.</li><li class="- topic/li "><p class="- topic/p ">For Bitbucket, refer to this Atlassian document: <xref href="https://support.atlassian.com/bitbucket-cloud/docs/create-an-app-password/" scope="external" class="- topic/xref ">Create an App password</xref>.</p></li><li class="- topic/li "><p class="- topic/p ">For GitHub, see this GitHub document: <xref href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token" scope="external" class="- topic/xref ">Creating a personal access token</xref>. Make sure you opt to create a classic PAT, and select <uicontrol class="+ topic/ph ui-d/uicontrol ">repo</uicontrol> scope to set permission scopes for the PAT.<image href="image/Github-Personal_access_token_permission.png" class="- topic/image "/></p></li><li class="- topic/li "><p class="- topic/p ">For GitLab, refer to this GitLab document: <xref href="https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#create-a-personal-access-token" scope="external" class="- topic/xref ">Personal access tokens</xref>.</p></li><li class="- topic/li "><p class="- topic/p ">For AWS CodeCommit, to create username and PAT for Git credentials, refer to this AWS document: <xref href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html#setting-up-gc-iam" scope="external" class="- topic/xref ">Step 3: Create Git credentials for HTTPS connections to CodeCommit</xref>. </p></li></ul></info></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">In the <uicontrol class="+ topic/ph ui-d/uicontrol ">Access Key ID</uicontrol> and <uicontrol class="+ topic/ph ui-d/uicontrol ">Secret Access Key</uicontrol> fields, enter your access key ID and secret access key in AWS CodeCommit. To retrieve the access key ID and secret access key, you can refer to this AWS document: <xref href="https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#create-a-personal-access-token" scope="external" class="- topic/xref ">Manage access keys for IAM</xref>. </cmd></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd "><b class="+ topic/ph hi-d/b ">Optional:</b> You can choose <uicontrol class="+ topic/ph ui-d/uicontrol ">Link existing test execution results with test cases having the same paths and names</uicontrol>. This option allows TestOps to attach existing test run results to the uploaded test cases and test suites that has the same paths and names.</cmd><stepxmp class="- topic/itemgroup task/stepxmp ">For example:<ul class="- topic/ul "><li class="- topic/li "><p class="- topic/p ">You have an existing test run results from the <uicontrol class="+ topic/ph ui-d/uicontrol ">Login</uicontrol> test case in the <codeph class="+ topic/ph pr-d/codeph ">Test Cases/Common Test Cases</codeph> folder. By default, if this test case is not from an uploaded Git test project, its test results are in the <uicontrol class="+ topic/ph ui-d/uicontrol ">Uploaded Data</uicontrol> folder in the <uicontrol conkeyref="kt-ui-text/kt-ui-test-management" class="+ topic/ph ui-d/uicontrol "/> tab.</p></li><li class="- topic/li "><p class="- topic/p ">You upload a Git repository that also has a <uicontrol class="+ topic/ph ui-d/uicontrol ">Login</uicontrol> test case in the <codeph class="+ topic/ph pr-d/codeph ">Test Cases/Common Test Cases</codeph> folder. </p></li><li class="- topic/li "><p class="- topic/p ">You check the <uicontrol class="+ topic/ph ui-d/uicontrol ">Link existing test execution results with test cases having the same paths and names</uicontrol> option.</p></li><li class="- topic/li "><p class="- topic/p ">Once the Git repository is connected successfully, in the <uicontrol conkeyref="kt-ui-text/kt-ui-test-management" class="+ topic/ph ui-d/uicontrol "/> tab, you can see the existing test results of the <uicontrol class="+ topic/ph ui-d/uicontrol ">Login</uicontrol> test case in the <codeph class="+ topic/ph pr-d/codeph ">&lt;your-git-repo-name&gt;/Test Cases/Common Test Cases</codeph> folder.</p></li></ul> </stepxmp></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Click <uicontrol class="+ topic/ph ui-d/uicontrol ">Connect</uicontrol>.</cmd><info class="- topic/itemgroup task/info "><p class="- topic/p ">The following sections appear:</p><ul class="- topic/ul "><li class="- topic/li "><uicontrol class="+ topic/ph ui-d/uicontrol ">Branch</uicontrol>: choose a branch.</li><li class="- topic/li "><uicontrol class="+ topic/ph ui-d/uicontrol ">Name</uicontrol>: enter your project name.</li><li class="- topic/li "><p class="- topic/p "><uicontrol class="+ topic/ph ui-d/uicontrol ">Description</uicontrol>: enter your Git project description (optional).</p></li></ul></info></step><step class="- topic/li task/step "><cmd class="- topic/ph task/cmd ">Click <uicontrol class="+ topic/ph ui-d/uicontrol ">Create</uicontrol>.</cmd></step></steps><result class="- topic/section task/result ">You have successfully uploaded your test scripts from a Git repository to <ph conkeyref="name-variables/katalon-testops" class="- topic/ph "/>. Next, you can start managing your test scripts in <ph conkeyref="name-variables/katalon-testops" class="- topic/ph "/>.</result></taskbody></task>