<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id_10" class="- topic/topic concept/concept "><title class="- topic/title ">Test cases</title><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">To access the sample test cases in this project, in the <b class="+ topic/ph hi-d/b ">Test Explorer</b> panel, go to the <b class="+ topic/ph hi-d/b ">Test Cases</b> folder.</p><p class="- topic/p "> <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/api-sample-prj/KS-API-Test-case.png" scope="external" width="500" class="- topic/image "><alt class="- topic/alt ">Test cases</alt></image>
        </p><p class="- topic/p ">There are two test cases for different purposes:</p><ol class="- topic/ol "><li class="- topic/li ">
                <p class="- topic/p "> The <b class="+ topic/ph hi-d/b ">Create a new user</b> test case is to create a new user. In the test case, we use the <codeph class="+ topic/ph pr-d/codeph ">sample.Common.createNewUser</codeph> keyword to: <ul class="- topic/ul "><li class="- topic/li ">
                            <p class="- topic/p ">Send the user information, including username, password, age, gender to the server to create an account. Here, we set the value type of <b class="+ topic/ph hi-d/b ">username</b>, <b class="+ topic/ph hi-d/b ">password</b>, <b class="+ topic/ph hi-d/b ">age</b>, <b class="+ topic/ph hi-d/b ">gender</b> as <b class="+ topic/ph hi-d/b ">Variable</b>. You can change the <b class="+ topic/ph hi-d/b ">username</b>, <b class="+ topic/ph hi-d/b ">password</b>, <b class="+ topic/ph hi-d/b ">age</b>, <b class="+ topic/ph hi-d/b ">gender</b> value in the <b class="+ topic/ph hi-d/b ">Variable</b> tab. To learn more about test case variables, you can refer to this document: <xref href="../../../Create_tests/Data_Driven_Testing/test-case-variables/test-case-variables.dita" class="- topic/xref ">Test Case Variables</xref>.</p>
                            <p class="- topic/p "> <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/api-sample-prj/KS-830-API-User-info-in-variables.png" scope="external" width="850" class="- topic/image "><alt class="- topic/alt ">User information in the variables tab</alt></image> </p>
                        </li><li class="- topic/li ">
                            <p class="- topic/p ">The POST will return a userID as the response.</p>
                        </li><li class="- topic/li ">Execute verification snippets in the <b class="+ topic/ph hi-d/b ">Verification</b> tab of the POST request.</li><li class="- topic/li ">Extract the new user ID from the response.</li></ul><note type="note" class="- topic/note ">
                        <ul class="- topic/ul "><li class="- topic/li ">
                                <p class="- topic/p ">If you change the user information in the <b class="+ topic/ph hi-d/b ">Variables</b> tab of the test case, make sure to change the verification snippets in the <b class="+ topic/ph hi-d/b ">Verification</b> tab of the POST request accordingly for successful verification. For example, if you change the user's age to <codeph class="+ topic/ph pr-d/codeph ">10</codeph>, then make sure to change the verification of the <codeph class="+ topic/ph pr-d/codeph ">age</codeph> element to <codeph class="+ topic/ph pr-d/codeph ">10</codeph>.</p>
                                <p class="- topic/p "> <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/api-sample-prj/KS-830-API-Matching-value-for-verification.png" scope="external" width="850" class="- topic/image "><alt class="- topic/alt ">A successful verification</alt></image> </p>
                            </li></ul>
                    </note>You can see the test script as follows: </p>
                <codeblock class="+ topic/pre pr-d/codeblock ">import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase 
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW 
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling 
import com.kms.katalon.core.testcase.TestCase as TestCase 
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS 
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI 
import internal.GlobalVariable as GlobalVariable

CustomKeywords.'sample.Common.createNewUser'(age as Integer, username, password, gender, 200)</codeblock>
            </li><li class="- topic/li ">
                <p class="- topic/p "> The <b class="+ topic/ph hi-d/b ">Find user by ID</b> test case retrieves user information via an <b class="+ topic/ph hi-d/b ">userID</b>. The flow is as follows: <ul class="- topic/ul "><li class="- topic/li ">
                            <p class="- topic/p ">First, we use the <codeph class="+ topic/ph pr-d/codeph ">sample.Common.createNewUser</codeph> keyword to:</p>
                            <ul class="- topic/ul "><li class="- topic/li ">Send the user information, including username, password, age, gender to the server to create a new account. Here, we set the value type of <b class="+ topic/ph hi-d/b ">username</b>, <b class="+ topic/ph hi-d/b ">password</b>, <b class="+ topic/ph hi-d/b ">age</b>, <b class="+ topic/ph hi-d/b ">gender</b> as <b class="+ topic/ph hi-d/b ">Variable</b>. You can change the <b class="+ topic/ph hi-d/b ">username</b>, <b class="+ topic/ph hi-d/b ">password</b>, <b class="+ topic/ph hi-d/b ">age</b>, <b class="+ topic/ph hi-d/b ">gender</b> value in the <b class="+ topic/ph hi-d/b ">Variable</b> tab.</li><li class="- topic/li ">The POST request returns a userID as the response.</li><li class="- topic/li ">Execute verification snippets in the <b class="+ topic/ph hi-d/b ">Verification</b> tab of the POST request.</li><li class="- topic/li ">Extract the new userID from the response.</li></ul>
                        </li><li class="- topic/li ">
                            <p class="- topic/p "> Then, we use the <codeph class="+ topic/ph pr-d/codeph ">sample.Common.findUserById</codeph> keyword to: <ul class="- topic/ul "><li class="- topic/li ">Send the GET request to retrieve the user information via the newly created userID.</li><li class="- topic/li ">Execute verification snippets in the <b class="+ topic/ph hi-d/b ">Verification</b> tab of the GET request.</li></ul><note type="note" class="- topic/note ">
                                    <ul class="- topic/ul "><li class="- topic/li ">If you change the user information in the <b class="+ topic/ph hi-d/b ">Variables</b> tab of the test case, make sure to change the verification snippets in the <b class="+ topic/ph hi-d/b ">Verification</b> tab of the POST and GET requests accordingly for successful verification. For example, if you change the user's age to <codeph class="+ topic/ph pr-d/codeph ">10</codeph>, then make sure to change the verification of the <codeph class="+ topic/ph pr-d/codeph ">age</codeph> element to <codeph class="+ topic/ph pr-d/codeph ">10</codeph>. <p class="- topic/p "> <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/api-sample-prj/KS-830-API-Matching-value-for-verification.png" scope="external" width="850" class="- topic/image "><alt class="- topic/alt ">A successful verification</alt></image> </p></li></ul>
                                </note>You can see the test script as follows:<codeblock class="+ topic/pre pr-d/codeblock ">import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import internal.GlobalVariable as GlobalVariable
import groovy.json.JsonSlurper as JsonSlurper
import com.kms.katalon.core.testobject.RequestObject as RequestObject
import static org.assertj.core.api.Assertions.*

int id = CustomKeywords.'sample.Common.createNewUser'(age as Integer, username, password, gender, 200)

CustomKeywords.'sample.Common.findUserById'(id, age as Integer, username, password, gender, 200)
</codeblock>
                            </p>
                        </li></ul>
                </p>
            </li></ol></conbody></concept>