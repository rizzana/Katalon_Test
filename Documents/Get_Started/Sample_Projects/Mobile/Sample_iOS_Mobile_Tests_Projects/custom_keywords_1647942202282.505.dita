<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id_4" class="- topic/topic concept/concept "><title class="- topic/title ">Custom keywords</title><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">You can use custom keywords in the test case. To learn more about custom keywords, you can refer to this document: <xref href="../../../../Create_tests/Keywords/Custom_Keywords/Introduction_To_Custom_Keywords/introduction-to-custom-keywords.dita" class="- topic/xref ">Introduction to custom keywords</xref>.</p><p class="- topic/p ">Katalon creates the <codeph class="+ topic/ph pr-d/codeph ">sample.Common.startApplication</codeph> custom keyword to define the absolute path for starting the iOS application. To see the custom keyword, in the <b class="+ topic/ph hi-d/b ">Test Explorer</b> panel, go to <b class="+ topic/ph hi-d/b ">Keywords &gt; sample &gt; Common.groovy</b>.</p><p class="- topic/p "> <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/iOS-sample-projects/KS-iOS-sample-custom-keywords.png" scope="external" width="450" class="- topic/image "><alt class="- topic/alt ">Custom keywords in the iOS project</alt></image>
        </p><table class="- topic/table "><tgroup cols="4" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Parameter</entry><entry class="- topic/entry ">Type</entry><entry class="- topic/entry ">Mandatory</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">appPath</entry><entry class="- topic/entry ">String</entry><entry class="- topic/entry ">Yes</entry><entry class="- topic/entry ">The absolute path of the application installation file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">uninstallAfterCloseApp</entry><entry class="- topic/entry ">boolean</entry><entry class="- topic/entry ">Yes</entry><entry class="- topic/entry ">true if uninstalling the application automatically after run.</entry></row><row class="- topic/row "><entry class="- topic/entry ">flowControl</entry><entry class="- topic/entry ">FailureHandling</entry><entry class="- topic/entry ">Optional</entry><entry class="- topic/entry ">Specify failure handling schema to determine whether the execution should be allowed to continue or stop. To learn more about failure handling settings, you can refer to this document: <xref href="../../../../Maintain/failure-handling/default_failure_handling_behavior.dita" class="- topic/xref ">Failure handling</xref>.</entry></row></tbody></tgroup></table><codeblock class="+ topic/pre pr-d/codeblock ">public class Common {
    @Keyword
    def startAppliucation() {
        String appPath = RunConfiguration.getProjectDir() + '/App/Coffee Timer.ipa'
        Mobile.startApplication(appPath, false)
    }
}
</codeblock><note type="note" class="- topic/note ">
            <p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li ">If you change the name of the <codeph class="+ topic/ph pr-d/codeph ">Coffee Timer</codeph> application while building it, make sure to change the absolute path to the new file accordingly. For example, if the application name is <codeph class="+ topic/ph pr-d/codeph ">Coffee Timer2.ipa</codeph>, the absolute path should be <codeph class="+ topic/ph pr-d/codeph ">/App/Coffee Timer2.ipa</codeph>.</li><li class="- topic/li ">If you are running test cases with Xcode simulators, the path should lead to the <codeph class="+ topic/ph pr-d/codeph ">Coffee Timer.app</codeph> file instead.</li></ul></p>
        </note></conbody></concept>