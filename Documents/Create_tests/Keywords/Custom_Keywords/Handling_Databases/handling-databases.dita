<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id" class="- topic/topic concept/concept "><title class="- topic/title ">Handling Databases in <ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/></title><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">With custom keywords, you can connect to a database as well as
         perform other data queries. </p><p class="- topic/p ">Below is a sample demonstrating how to create custom keywords
         for:</p><ul class="- topic/ul "><li class="- topic/li ">Establishing database connection</li><li class="- topic/li ">Executing data query</li><li class="- topic/li ">Closing the connection</li></ul><codeblock class="+ topic/pre pr-d/codeblock ">private static Connection connection = null;

    /**
     * Open and return a connection to database
     * @param dataFile absolute file path  
     * @return an instance of java.sql.Connection
     */
    @Keyword
    def connectDB(String dataFile){
        //Load driver class for your specific database type
        Class.forName("org.sqlite.JDBC")
        String connectionString = "jdbc:sqlite:" + dataFile
        if(connection != null &amp;&amp; !connection.isClosed()){
            connection.close()
        }
        connection = DriverManager.getConnection(connectionString)
        return connection
    }

    /**
     * execute a SQL query on database
     * @param queryString SQL query string
     * @return a reference to returned data collection, an instance of java.sql.ResultSet
     */
    @Keyword
    def executeQuery(String queryString) {
        Statement stm = connection.createStatement()
        ResultSet rs = stm.executeQuery(queryString)                
        return rs
    }

    @Keyword
    def closeDatabaseConnection() {
        if(connection != null &amp;&amp; !connection.isClosed()){
            connection.close()
        }
        connection = null
    }

    /**
     * Execute non-query (usually INSERT/UPDATE/DELETE/COUNT/SUM...) on database    
     * @param queryString a SQL statement
     * @return single value result of SQL statement
     */
    @Keyword
    def execute(String queryString) {
        Statement stm = connection.createStatement()
        boolean result = stm.execute(queryString)
        return result
    }
</codeblock><p class="- topic/p ">You can add the sample code above to your keyword file and
         modify the details as appropriated. </p><p class="- topic/p ">
      <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/handling-databases/image2017-2-24-113A383A14.png" scope="external" width="600" class="- topic/image "/>
    </p></conbody></concept>