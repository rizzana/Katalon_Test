<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id_5" class="- topic/topic concept/concept "><title class="- topic/title ">Katalon Studio capabilities</title><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">This section shows you capabilities unique to the <ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/>.</p><table class="- topic/table "><tgroup cols="3" class="- topic/tgroup "><colspec colname="c1" colnum="1" class="- topic/colspec "/><colspec colname="c2" colnum="2" class="- topic/colspec "/><colspec colname="c3" colnum="3" class="- topic/colspec "/><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Capability</entry><entry class="- topic/entry ">Description</entry><entry class="- topic/entry ">Supported Katalon Studio versions</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Application Under Test (AUT) Testing Combination</entry><entry class="- topic/entry "><ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/> allows combining multiple application types (Web UI, API, Mobile &amp; Desktop) in one project and execution flow. You can test this capability using our <xref format="html" href="https://github.com/katalon-studio-samples" scope="external" class="- topic/xref ">GitHub sample projects</xref>.</entry><entry class="- topic/entry ">v7.0.0 and later</entry></row><row class="- topic/row "><entry class="- topic/entry ">Flexible test design options</entry><entry class="- topic/entry "><ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/> test scripts are interchangeable between two interfaces: manual and script editors. This enables a team with a mixed level of automation testing skills to work effectively and efficiently in the same project.</entry><entry class="- topic/entry ">v7.0.0 and later</entry></row><row class="- topic/row "><entry class="- topic/entry ">Self-healing</entry><entry class="- topic/entry ">The self-healing mechanism deals with broken locators during execution to reduce the test maintenance effort. For more details, see <xref href="../../../Maintain/self-healing-in-Studio/intro-self-healing-in-Studio.dita" class="- topic/xref ">Self-healing tests</xref>.</entry><entry class="- topic/entry ">v7.6.0 and later</entry></row><row class="- topic/row "><entry class="- topic/entry ">Smart Wait</entry><entry class="- topic/entry ">Smart Wait "tells" the WebDriver to wait for the web page to become static before performing any operations. This reduces the risk of test failures caused when the page has not fully loaded. For more details, see <xref href="../../../Create_tests/Record_And_Spy/WebUI_Record_And_Spy_Utilities/webui-smartwait/webui-smartwait.dita" class="- topic/xref ">Smart Wait function</xref>.</entry><entry class="- topic/entry ">v7.0.0 and later</entry></row><row class="- topic/row "><entry class="- topic/entry ">Time Capsule</entry><entry class="- topic/entry ">Time Capsule enables you to restore the Application Under Test to its previous state before the test failed, for example if locators did not find the expected Web UI objects. <xref href="../../../Maintain/time-capsule/intro-time-capsule.dita" class="- topic/xref ">Learn more about this capability</xref>.</entry><entry class="- topic/entry ">v7.8.0 and later</entry></row></tbody></tgroup></table></conbody></concept>