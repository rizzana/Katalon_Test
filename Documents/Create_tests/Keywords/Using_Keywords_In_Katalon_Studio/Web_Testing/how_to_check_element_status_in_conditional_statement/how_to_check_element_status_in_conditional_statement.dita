<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id" class="- topic/topic concept/concept "><title class="- topic/title ">How to check element status in conditional statement in <ph conkeyref="name-variables/katalon-studio" class="- topic/ph "/></title><conbody class="- topic/body  concept/conbody "><p class="- topic/p ">In Web UI functional testing, you may want to ensure that an
         element is clickable, present, or visible before performing further
         actions on the element. The function used in such a case is
         <b class="+ topic/ph hi-d/b ">verifyElementClickable</b> with this
         specification:</p><p class="- topic/p ">
      <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/tutorials/how_to_check_element_status_in_conditional_statement/verifyElementClickable_1.png" scope="external" class="- topic/image "><alt class="- topic/alt ">verifyElementClickable</alt></image>
    </p><p class="- topic/p ">The following code block demonstrates how to check the element
         status in a conditional statement. You may assume that the function
         WebUI.verifyElementClickable will return <b class="+ topic/ph hi-d/b ">true</b> if
         the element is clickable, and <b class="+ topic/ph hi-d/b ">false</b> if the element
         is not.</p><codeblock class="+ topic/pre pr-d/codeblock ">if (WebUI.verifyElementClickable(findTestObject('Test Objects/Pages/Login Page/elContinue - Wrong'))) {
    WebUI.click(findTestObject('Test Objects/Pages/Login Page/elContinue - Wrong'))
} else {
    WebUI.click(findTestObject('Test Objects/Pages/Login Page/elContinue'))
}
</codeblock><p class="- topic/p ">However, in practice, if the element is not found after timeout,
         the function does not return false. Instead, the exception below is
         returned:</p><codeblock class="+ topic/pre pr-d/codeblock ">Stack trace: com.kms.katalon.core.exception.StepFailedException: 
Unable to verify object 'Object Repository/Test Objects/Pages/Login Page/elContinue - Wrong' to be clickable (Root cause: Web element with id: 'Object Repository/Test Objects/Pages/Login Page/elContinue - Wrong' located by 'By.xpath: //button[.='Continue - Wrong']' not found)
</codeblock><p class="- topic/p ">You may find it confusing since the function has been used with
         the proper syntax and purpose as specified in the API
         documentation. Here’s why: In Katalon Studio, there are two
         overloading functions named
         <b class="+ topic/ph hi-d/b ">verifyElementClickable</b>.</p><p class="- topic/p ">Function 1 with default FailureHandling: <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/tutorials/how_to_check_element_status_in_conditional_statement/verifyElementClickable_1.png" scope="external" class="- topic/image "><alt class="- topic/alt ">Function 1 with default FailureHandling</alt></image>
    </p><p class="- topic/p ">Function 2 wich custom FailureHandling: <image href="https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/tutorials/how_to_check_element_status_in_conditional_statement/verifyElementClickable_2.png" scope="external" class="- topic/image "><alt class="- topic/alt ">Function 2 wich custom FailureHandling</alt></image>
    </p><p class="- topic/p ">The first function has a default
         <b class="+ topic/ph hi-d/b ">FailureHandling</b> parameter; while the second allows
         you to customize the parameter. This will determine the
         function’s behavior in some specific situations.</p><p class="- topic/p ">If you expect the function to return <b class="+ topic/ph hi-d/b ">false</b> if
         the element is not found, you will have to use the second function
         with the <b class="+ topic/ph hi-d/b ">FailureHandling.OPTIONAL</b> parameter. The
         following script will work with your expectation:</p><codeblock class="+ topic/pre pr-d/codeblock ">if (WebUI.verifyElementClickable(findTestObject('Test Objects/Pages/Login Page/elContinue - Wrong'), FailureHandling.OPTIONAL)) {
    WebUI.click(findTestObject('Test Objects/Pages/Login Page/elContinue - Wrong'))
} else {
    WebUI.click(findTestObject('Test Objects/Pages/Login Page/elContinue'))
}

</codeblock><p class="- topic/p ">We hope this tip will help resolve your problem when checking an
         element status before performing actions on it.</p></conbody></concept>